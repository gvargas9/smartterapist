{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DevLogin=()=>{const navigate=useNavigate();const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[minimized,setMinimized]=useState(false);// Load minimized state from localStorage\nuseEffect(()=>{const savedState=localStorage.getItem('dev_login_minimized');if(savedState){setMinimized(savedState==='true');}},[]);// Save minimized state to localStorage\nconst toggleMinimized=()=>{const newState=!minimized;setMinimized(newState);localStorage.setItem('dev_login_minimized',String(newState));};// Mock user credentials\nconst mockUsers={client:{email:'client@example.com',password:'password123',role:'client'},therapist:{email:'therapist@example.com',password:'password123',role:'therapist'},admin:{email:'admin@example.com',password:'password123',role:'admin'}};// Mock login function that bypasses authentication for development purposes\nconst handleLogin=userType=>{try{setLoading(true);setError('');if(!mockUsers[userType]){throw new Error(`Invalid user type: ${userType}`);}const user=mockUsers[userType];// Create mock user data with all necessary fields\nconst mockUser={id:`${userType}-1`,email:user.email,role:user.role,name:user.name||`${userType.charAt(0).toUpperCase()+userType.slice(1)} User`,profile_data:{name:user.name||`${userType.charAt(0).toUpperCase()+userType.slice(1)} User`}};// Create a mock Supabase session structure\nconst mockSession={provider_token:null,provider_refresh_token:null,access_token:'mock-token-'+Math.random().toString(36).substring(2),refresh_token:'mock-refresh-'+Math.random().toString(36).substring(2),expires_in:3600,expires_at:Math.floor(Date.now()/1000)+3600,token_type:'bearer',user:mockUser};// Store in localStorage with the Supabase project ID in the correct format\nlocalStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token',JSON.stringify({currentSession:mockSession,expiresAt:mockSession.expires_at}));// Also store in our custom key for backup\nlocalStorage.setItem('smarttherapist_mock_user',JSON.stringify(mockUser));console.log(`✅ Mock login successful as ${userType}`);// Navigate to the appropriate dashboard\nsetTimeout(()=>{switch(userType){case'client':window.location.href='/client/dashboard';break;case'therapist':window.location.href='/therapist/dashboard';break;case'admin':window.location.href='/admin/dashboard';break;default:window.location.reload();}},500);}catch(error){console.error(`Error with mock login as ${userType}:`,error);setError(error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 z-50 transition-all duration-300 ease-in-out overflow-hidden\",style:{maxHeight:minimized?'40px':'350px',width:minimized?'180px':'250px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 border-b border-gray-200 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-800\",children:\"Development Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleMinimized,className:\"text-gray-500 hover:text-gray-700 focus:outline-none\",children:minimized?/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:\"\\u25BC Expand\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:\"\\u25B2 Minimize\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-3\",style:{display:minimized?'none':'block'},children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLogin('client'),disabled:loading,className:\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\",children:loading?'Logging in...':'Login as Client'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLogin('therapist'),disabled:loading,className:\"w-full px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors disabled:opacity-50\",children:loading?'Logging in...':'Login as Therapist'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLogin('admin'),disabled:loading,className:\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\",children:loading?'Logging in...':'Login as Admin'}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 pt-2 border-t border-gray-200 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Note: Default credentials\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",mockUsers.client.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Password: \",mockUsers.client.password]})]})]})]})]});};export default DevLogin;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","DevLogin","navigate","loading","setLoading","error","setError","minimized","setMinimized","savedState","localStorage","getItem","toggleMinimized","newState","setItem","String","mockUsers","client","email","password","role","therapist","admin","handleLogin","userType","Error","user","mockUser","id","name","charAt","toUpperCase","slice","profile_data","mockSession","provider_token","provider_refresh_token","access_token","Math","random","toString","substring","refresh_token","expires_in","expires_at","floor","Date","now","token_type","JSON","stringify","currentSession","expiresAt","console","log","setTimeout","window","location","href","reload","message","className","style","maxHeight","width","children","onClick","display","disabled"],"sources":["/Users/gio/development/smartterapist/client/src/components/DevLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nconst DevLogin = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [minimized, setMinimized] = useState(false);\n  \n  // Load minimized state from localStorage\n  useEffect(() => {\n    const savedState = localStorage.getItem('dev_login_minimized');\n    if (savedState) {\n      setMinimized(savedState === 'true');\n    }\n  }, []);\n  \n  // Save minimized state to localStorage\n  const toggleMinimized = () => {\n    const newState = !minimized;\n    setMinimized(newState);\n    localStorage.setItem('dev_login_minimized', String(newState));\n  };\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = (userType) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n\n      const user = mockUsers[userType];\n      \n      // Create mock user data with all necessary fields\n      const mockUser = {\n        id: `${userType}-1`,\n        email: user.email,\n        role: user.role,\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n        profile_data: {\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n        }\n      };\n      \n      // Create a mock Supabase session structure\n      const mockSession = {\n        provider_token: null,\n        provider_refresh_token: null,\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        expires_in: 3600,\n        expires_at: Math.floor(Date.now() / 1000) + 3600,\n        token_type: 'bearer',\n        user: mockUser\n      };\n      \n      // Store in localStorage with the Supabase project ID in the correct format\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify({\n        currentSession: mockSession,\n        expiresAt: mockSession.expires_at\n      }));\n      \n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      \n      console.log(`✅ Mock login successful as ${userType}`);\n      \n      // Navigate to the appropriate dashboard\n      setTimeout(() => {\n        switch (userType) {\n          case 'client':\n            window.location.href = '/client/dashboard';\n            break;\n          case 'therapist':\n            window.location.href = '/therapist/dashboard';\n            break;\n          case 'admin':\n            window.location.href = '/admin/dashboard';\n            break;\n          default:\n            window.location.reload();\n        }\n      }, 500);\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 z-50 transition-all duration-300 ease-in-out overflow-hidden\"\n         style={{ maxHeight: minimized ? '40px' : '350px', width: minimized ? '180px' : '250px' }}\n    >\n      <div className=\"flex items-center justify-between p-2 border-b border-gray-200 bg-gray-50\">\n        <h3 className=\"text-sm font-semibold text-gray-800\">Development Login</h3>\n        <button \n          onClick={toggleMinimized}\n          className=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\n        >\n          {minimized ? \n            <span className=\"text-xs\">▼ Expand</span> : \n            <span className=\"text-xs\">▲ Minimize</span>\n          }\n        </button>\n      </div>\n      \n      <div className=\"p-3\" style={{ display: minimized ? 'none' : 'block' }}>\n        {error && (\n          <div className=\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"space-y-2\">\n          <button\n            onClick={() => handleLogin('client')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Client'}\n          </button>\n          <button\n            onClick={() => handleLogin('therapist')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Therapist'}\n          </button>\n          <button\n            onClick={() => handleLogin('admin')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Admin'}\n          </button>\n          \n          <div className=\"mt-3 pt-2 border-t border-gray-200 text-xs text-gray-500\">\n            <p>Note: Default credentials</p>\n            <p>Email: {mockUsers.client.email}</p>\n            <p>Password: {mockUsers.client.password}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DevLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}