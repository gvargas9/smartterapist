{"ast":null,"code":"/**\n * Login Helper Utility\n * \n * This file provides utility functions to help with login during development.\n */\n\n// Mock user credentials\nexport const mockUsers = {\n  client: {\n    email: 'client@example.com',\n    password: 'password123',\n    role: 'client',\n    name: 'Client User'\n  },\n  therapist: {\n    email: 'therapist@example.com',\n    password: 'password123',\n    role: 'therapist',\n    name: 'Therapist User'\n  },\n  admin: {\n    email: 'admin@example.com',\n    password: 'password123',\n    role: 'admin',\n    name: 'Admin User'\n  }\n};\n\n// Mock login function that bypasses authentication for development purposes\nexport const mockLogin = userType => {\n  try {\n    if (!mockUsers[userType]) {\n      throw new Error(`Invalid user type: ${userType}`);\n    }\n    const user = mockUsers[userType];\n\n    // Store mock user in localStorage to simulate authentication\n    localStorage.setItem('smarttherapist_mock_user', JSON.stringify({\n      id: `${userType}-1`,\n      email: user.email,\n      role: user.role,\n      name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n      profile_data: {\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n      }\n    }));\n    console.log(`Mock login successful as ${userType}`);\n\n    // Navigate to the appropriate dashboard based on user type\n    switch (userType) {\n      case 'client':\n        window.location.href = '/client/dashboard';\n        break;\n      case 'therapist':\n        window.location.href = '/therapist/dashboard';\n        break;\n      case 'admin':\n        window.location.href = '/admin/dashboard';\n        break;\n      default:\n        window.location.href = '/';\n    }\n    return true;\n  } catch (error) {\n    console.error(`Error with mock login as ${userType}:`, error);\n    return false;\n  }\n};\n\n// Function to run in the browser console\nexport const loginAs = userType => {\n  return mockLogin(userType);\n};\n\n// Export a global function for browser console use\nif (typeof window !== 'undefined') {\n  window.loginAs = loginAs;\n}\nexport default {\n  mockUsers,\n  mockLogin,\n  loginAs\n};","map":{"version":3,"names":["mockUsers","client","email","password","role","name","therapist","admin","mockLogin","userType","Error","user","localStorage","setItem","JSON","stringify","id","charAt","toUpperCase","slice","profile_data","console","log","window","location","href","error","loginAs"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/utils/loginHelper.js"],"sourcesContent":["/**\n * Login Helper Utility\n * \n * This file provides utility functions to help with login during development.\n */\n\n// Mock user credentials\nexport const mockUsers = {\n  client: {\n    email: 'client@example.com',\n    password: 'password123',\n    role: 'client',\n    name: 'Client User'\n  },\n  therapist: {\n    email: 'therapist@example.com',\n    password: 'password123',\n    role: 'therapist',\n    name: 'Therapist User'\n  },\n  admin: {\n    email: 'admin@example.com',\n    password: 'password123',\n    role: 'admin',\n    name: 'Admin User'\n  }\n};\n\n// Mock login function that bypasses authentication for development purposes\nexport const mockLogin = (userType) => {\n  try {\n    if (!mockUsers[userType]) {\n      throw new Error(`Invalid user type: ${userType}`);\n    }\n\n    const user = mockUsers[userType];\n    \n    // Store mock user in localStorage to simulate authentication\n    localStorage.setItem('smarttherapist_mock_user', JSON.stringify({\n      id: `${userType}-1`,\n      email: user.email,\n      role: user.role,\n      name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n      profile_data: {\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n      }\n    }));\n    \n    console.log(`Mock login successful as ${userType}`);\n    \n    // Navigate to the appropriate dashboard based on user type\n    switch (userType) {\n      case 'client':\n        window.location.href = '/client/dashboard';\n        break;\n      case 'therapist':\n        window.location.href = '/therapist/dashboard';\n        break;\n      case 'admin':\n        window.location.href = '/admin/dashboard';\n        break;\n      default:\n        window.location.href = '/';\n    }\n    \n    return true;\n  } catch (error) {\n    console.error(`Error with mock login as ${userType}:`, error);\n    return false;\n  }\n};\n\n// Function to run in the browser console\nexport const loginAs = (userType) => {\n  return mockLogin(userType);\n};\n\n// Export a global function for browser console use\nif (typeof window !== 'undefined') {\n  window.loginAs = loginAs;\n}\n\nexport default {\n  mockUsers,\n  mockLogin,\n  loginAs\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,SAAS,GAAG;EACvBC,MAAM,EAAE;IACNC,KAAK,EAAE,oBAAoB;IAC3BC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTJ,KAAK,EAAE,uBAAuB;IAC9BC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;EACR,CAAC;EACDE,KAAK,EAAE;IACLL,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;EACR;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAIC,QAAQ,IAAK;EACrC,IAAI;IACF,IAAI,CAACT,SAAS,CAACS,QAAQ,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,sBAAsBD,QAAQ,EAAE,CAAC;IACnD;IAEA,MAAME,IAAI,GAAGX,SAAS,CAACS,QAAQ,CAAC;;IAEhC;IACAG,YAAY,CAACC,OAAO,CAAC,0BAA0B,EAAEC,IAAI,CAACC,SAAS,CAAC;MAC9DC,EAAE,EAAE,GAAGP,QAAQ,IAAI;MACnBP,KAAK,EAAES,IAAI,CAACT,KAAK;MACjBE,IAAI,EAAEO,IAAI,CAACP,IAAI;MACfC,IAAI,EAAEM,IAAI,CAACN,IAAI,IAAI,GAAGI,QAAQ,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,OAAO;MACjFC,YAAY,EAAE;QACZf,IAAI,EAAEM,IAAI,CAACN,IAAI,IAAI,GAAGI,QAAQ,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC;MAC5E;IACF,CAAC,CAAC,CAAC;IAEHE,OAAO,CAACC,GAAG,CAAC,4BAA4Bb,QAAQ,EAAE,CAAC;;IAEnD;IACA,QAAQA,QAAQ;MACd,KAAK,QAAQ;QACXc,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mBAAmB;QAC1C;MACF,KAAK,WAAW;QACdF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;QAC7C;MACF,KAAK,OAAO;QACVF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,kBAAkB;QACzC;MACF;QACEF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC9B;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,4BAA4BjB,QAAQ,GAAG,EAAEiB,KAAK,CAAC;IAC7D,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIlB,QAAQ,IAAK;EACnC,OAAOD,SAAS,CAACC,QAAQ,CAAC;AAC5B,CAAC;;AAED;AACA,IAAI,OAAOc,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACI,OAAO,GAAGA,OAAO;AAC1B;AAEA,eAAe;EACb3B,SAAS;EACTQ,SAAS;EACTmB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}