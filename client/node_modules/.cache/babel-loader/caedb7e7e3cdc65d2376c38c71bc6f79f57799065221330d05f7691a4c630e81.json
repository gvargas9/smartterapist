{"ast":null,"code":"/**\n * Internationalization (i18n) configuration\n * \n * This file sets up the i18next library for multi-lingual support across the application.\n * Translations are fetched from Supabase instead of static JSON files.\n */import i18n from'i18next';import{initReactI18next}from'react-i18next';import LanguageDetector from'i18next-browser-languagedetector';import Backend from'i18next-http-backend';import{fetchTranslations}from'../services/translationService';// Custom backend that loads translations from Supabase\nconst SupabaseBackend={type:'backend',init:()=>{},read:async(language,namespace,callback)=>{try{// Fetch translations from Supabase\nconst translations=await fetchTranslations(language,namespace);// Return the translations to i18next\ncallback(null,translations);}catch(error){console.error(`Error loading ${language} translations:`,error);callback(error,null);}}};// Initialize i18next\ni18n// Use our custom Supabase backend\n.use(SupabaseBackend)// Detect user language\n.use(LanguageDetector)// Pass the i18n instance to react-i18next\n.use(initReactI18next)// Initialize i18next\n.init({fallbackLng:'en',debug:process.env.NODE_ENV==='development',interpolation:{escapeValue:false// React already escapes values\n},// Detection options\ndetection:{order:['localStorage','navigator'],caches:['localStorage']},// React options\nreact:{useSuspense:true},// Load translations immediately\npartialBundledLanguages:true});export default i18n;","map":{"version":3,"names":["i18n","initReactI18next","LanguageDetector","Backend","fetchTranslations","SupabaseBackend","type","init","read","language","namespace","callback","translations","error","console","use","fallbackLng","debug","process","env","NODE_ENV","interpolation","escapeValue","detection","order","caches","react","useSuspense","partialBundledLanguages"],"sources":["/Users/gio/development/smartterapist/client/src/i18n/index.js"],"sourcesContent":["/**\n * Internationalization (i18n) configuration\n * \n * This file sets up the i18next library for multi-lingual support across the application.\n * Translations are fetched from Supabase instead of static JSON files.\n */\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport { fetchTranslations } from '../services/translationService';\n\n// Custom backend that loads translations from Supabase\nconst SupabaseBackend = {\n  type: 'backend',\n  init: () => {},\n  read: async (language, namespace, callback) => {\n    try {\n      // Fetch translations from Supabase\n      const translations = await fetchTranslations(language, namespace);\n      \n      // Return the translations to i18next\n      callback(null, translations);\n    } catch (error) {\n      console.error(`Error loading ${language} translations:`, error);\n      callback(error, null);\n    }\n  },\n};\n\n// Initialize i18next\ni18n\n  // Use our custom Supabase backend\n  .use(SupabaseBackend)\n  // Detect user language\n  .use(LanguageDetector)\n  // Pass the i18n instance to react-i18next\n  .use(initReactI18next)\n  // Initialize i18next\n  .init({\n    fallbackLng: 'en',\n    debug: process.env.NODE_ENV === 'development',\n    \n    interpolation: {\n      escapeValue: false, // React already escapes values\n    },\n    \n    // Detection options\n    detection: {\n      order: ['localStorage', 'navigator'],\n      caches: ['localStorage'],\n    },\n    \n    // React options\n    react: {\n      useSuspense: true,\n    },\n    \n    // Load translations immediately\n    partialBundledLanguages: true,\n  });\n\nexport default i18n;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,IAAI,KAAM,SAAS,CAC1B,OAASC,gBAAgB,KAAQ,eAAe,CAChD,MAAO,CAAAC,gBAAgB,KAAM,kCAAkC,CAC/D,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,OAASC,iBAAiB,KAAQ,gCAAgC,CAElE;AACA,KAAM,CAAAC,eAAe,CAAG,CACtBC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAEA,CAAA,GAAM,CAAC,CAAC,CACdC,IAAI,CAAE,KAAAA,CAAOC,QAAQ,CAAEC,SAAS,CAAEC,QAAQ,GAAK,CAC7C,GAAI,CACF;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAR,iBAAiB,CAACK,QAAQ,CAAEC,SAAS,CAAC,CAEjE;AACAC,QAAQ,CAAC,IAAI,CAAEC,YAAY,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iBAAiBJ,QAAQ,gBAAgB,CAAEI,KAAK,CAAC,CAC/DF,QAAQ,CAACE,KAAK,CAAE,IAAI,CAAC,CACvB,CACF,CACF,CAAC,CAED;AACAb,IACE;AAAA,CACCe,GAAG,CAACV,eAAe,CACpB;AAAA,CACCU,GAAG,CAACb,gBAAgB,CACrB;AAAA,CACCa,GAAG,CAACd,gBAAgB,CACrB;AAAA,CACCM,IAAI,CAAC,CACJS,WAAW,CAAE,IAAI,CACjBC,KAAK,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAE7CC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AACtB,CAAC,CAED;AACAC,SAAS,CAAE,CACTC,KAAK,CAAE,CAAC,cAAc,CAAE,WAAW,CAAC,CACpCC,MAAM,CAAE,CAAC,cAAc,CACzB,CAAC,CAED;AACAC,KAAK,CAAE,CACLC,WAAW,CAAE,IACf,CAAC,CAED;AACAC,uBAAuB,CAAE,IAC3B,CAAC,CAAC,CAEJ,cAAe,CAAA5B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}