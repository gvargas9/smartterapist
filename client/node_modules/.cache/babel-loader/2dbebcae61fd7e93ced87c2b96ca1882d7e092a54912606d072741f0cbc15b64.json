{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { DEV_MODE, getMockUser } from '../utils/devMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  role\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (DEV_MODE) {\n    // In development mode, bypass authentication completely\n    // Get a mock user based on the requested route role\n    const mockUser = getMockUser(role || 'client');\n\n    // Store the mock user in localStorage for persistence if not already there\n    if (!localStorage.getItem('smarttherapist_mock_user')) {\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      console.log('ProtectedRoute: Created mock user for role:', role, mockUser);\n    }\n\n    // Always render the child routes in development mode\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // In production mode, check authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not logged in, redirect to login\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role is specified and doesn't match, redirect to appropriate dashboard\n  if (role && user.role !== role) {\n    if (user.role === 'client') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/client/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'therapist') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/therapist/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'admin') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/admin/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    } else {\n      // Unknown role, log out for safety\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // If everything is fine, render the child routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","DEV_MODE","getMockUser","jsxDEV","_jsxDEV","ProtectedRoute","role","_s","user","loading","mockUser","localStorage","getItem","setItem","JSON","stringify","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","to","replace","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { DEV_MODE, getMockUser } from '../utils/devMode';\n\nconst ProtectedRoute = ({ role }) => {\n  const { user, loading } = useAuth();\n  \n  if (DEV_MODE) {\n    // In development mode, bypass authentication completely\n    // Get a mock user based on the requested route role\n    const mockUser = getMockUser(role || 'client');\n    \n    // Store the mock user in localStorage for persistence if not already there\n    if (!localStorage.getItem('smarttherapist_mock_user')) {\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      console.log('ProtectedRoute: Created mock user for role:', role, mockUser);\n    }\n    \n    // Always render the child routes in development mode\n    return <Outlet />;\n  }\n  \n  // In production mode, check authentication\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n  \n  // If not logged in, redirect to login\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // If role is specified and doesn't match, redirect to appropriate dashboard\n  if (role && user.role !== role) {\n    if (user.role === 'client') {\n      return <Navigate to=\"/client/dashboard\" replace />;\n    } else if (user.role === 'therapist') {\n      return <Navigate to=\"/therapist/dashboard\" replace />;\n    } else if (user.role === 'admin') {\n      return <Navigate to=\"/admin/dashboard\" replace />;\n    } else {\n      // Unknown role, log out for safety\n      return <Navigate to=\"/login\" replace />;\n    }\n  }\n  \n  // If everything is fine, render the child routes\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}