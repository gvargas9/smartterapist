{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/client/src/components/SupabaseDemo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../services/supabaseClient';\nimport supabaseService from '../services/supabaseService';\n// Import our models\nimport { UserModel, ClientModel, TherapistModel } from '../models';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupabaseDemo = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('Checking...');\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // State for model testing\n  const [modelTestResult, setModelTestResult] = useState('');\n  const [modelTestLoading, setModelTestLoading] = useState(false);\n\n  // Check Supabase connection on component mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      const isHealthy = await supabaseService.checkHealth();\n      setConnectionStatus(isHealthy ? 'Connected' : 'Disconnected');\n    };\n    checkConnection();\n\n    // Set up auth state change listener\n    const {\n      data: {\n        subscription\n      }\n    } = supabaseService.auth.onAuthStateChange((event, session) => {\n      console.log('Auth event:', event);\n      if (session) {\n        setUser(session.user);\n      } else {\n        setUser(null);\n      }\n    });\n\n    // Check for existing session\n    const getInitialSession = async () => {\n      const {\n        data\n      } = await supabaseService.auth.getSession();\n      if (data.session) {\n        setUser(data.session.user);\n      }\n    };\n    getInitialSession();\n\n    // Cleanup subscription on unmount\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Handle sign up\n  const handleSignUp = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const {\n        data,\n        error\n      } = await supabaseService.auth.signUp(email, password);\n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Sign up successful! Check your email for confirmation.');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle sign in\n  const handleSignIn = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const {\n        data,\n        error\n      } = await supabaseService.auth.signIn(email, password);\n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Sign in successful!');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle sign out\n  const handleSignOut = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const {\n        error\n      } = await supabaseService.auth.signOut();\n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Signed out successfully!');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"supabase-demo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supabase Integration Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Connection Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: connectionStatus === 'Connected' ? 'connected' : 'disconnected',\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"TypeScript Models Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-4\",\n        children: \"Test our TypeScript models for interacting with the database:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          setModelTestLoading(true);\n          setModelTestResult('');\n          try {\n            // Test UserModel\n            if (!user) {\n              throw new Error('You must be signed in to test the models');\n            }\n\n            // Try to get the current user from the database\n            const userData = await UserModel.getById(user.id);\n            if (userData) {\n              setModelTestResult(`Successfully retrieved user data: ${JSON.stringify(userData)}`);\n            } else {\n              // If user doesn't exist in the database yet, create them\n              const newUser = await UserModel.create({\n                id: user.id,\n                email: user.email,\n                role: 'client',\n                first_name: 'Test',\n                last_name: 'User'\n              });\n              if (newUser) {\n                setModelTestResult(`Successfully created user: ${JSON.stringify(newUser)}`);\n\n                // Test creating a client record\n                const client = await ClientModel.create({\n                  user_id: user.id,\n                  profile_data: {\n                    interests: ['therapy', 'wellness']\n                  }\n                });\n                if (client) {\n                  setModelTestResult(prev => prev + '\\n\\nSuccessfully created client: ' + JSON.stringify(client));\n                }\n              } else {\n                throw new Error('Failed to create user record');\n              }\n            }\n          } catch (error) {\n            setModelTestResult(`Error testing models: ${error.message}`);\n          } finally {\n            setModelTestLoading(false);\n          }\n        },\n        className: \"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\",\n        disabled: modelTestLoading,\n        children: modelTestLoading ? 'Testing...' : 'Test Models'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), modelTestResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-100 rounded overflow-auto max-h-60\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap\",\n          children: modelTestResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 14\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 14\n        }, this), \" \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        disabled: loading,\n        children: loading ? 'Signing Out...' : 'Sign Out'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignIn,\n            disabled: loading,\n            children: loading ? 'Signing In...' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignUp,\n            disabled: loading,\n            children: loading ? 'Signing Up...' : 'Sign Up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Additional Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates basic authentication with Supabase. The full supabaseService.js includes methods for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Database operations (fetch, insert, update, delete)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Storage management (upload, download, list files)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Realtime subscriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"RPC function calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .supabase-demo {\n          max-width: 600px;\n          margin: 0 auto;\n          padding: 20px;\n          font-family: Arial, sans-serif;\n        }\n        .connection-status {\n          margin-bottom: 20px;\n          padding: 10px;\n          background-color: #f5f5f5;\n          border-radius: 4px;\n        }\n        .connected {\n          color: green;\n          font-weight: bold;\n        }\n        .disconnected {\n          color: red;\n          font-weight: bold;\n        }\n        .auth-form, .user-profile {\n          margin-bottom: 20px;\n          padding: 15px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .form-group {\n          margin-bottom: 15px;\n        }\n        .form-group label {\n          display: block;\n          margin-bottom: 5px;\n        }\n        .form-group input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .button-group {\n          display: flex;\n          gap: 10px;\n        }\n        button {\n          padding: 8px 16px;\n          background-color: #4285f4;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        button:hover {\n          background-color: #3367d6;\n        }\n        button:disabled {\n          background-color: #cccccc;\n          cursor: not-allowed;\n        }\n        .message {\n          margin: 15px 0;\n          padding: 10px;\n          border-radius: 4px;\n        }\n        .error {\n          background-color: #ffebee;\n          color: #c62828;\n        }\n        .success {\n          background-color: #e8f5e9;\n          color: #2e7d32;\n        }\n        .demo-section {\n          margin-top: 20px;\n          padding: 15px;\n          background-color: #f5f5f5;\n          border-radius: 4px;\n        }\n        ul {\n          padding-left: 20px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(SupabaseDemo, \"5IFt1QrOPF23GAtyD3I0S+tGHRk=\");\n_c = SupabaseDemo;\nexport default SupabaseDemo;\nvar _c;\n$RefreshReg$(_c, \"SupabaseDemo\");","map":{"version":3,"names":["React","useState","useEffect","supabase","supabaseService","UserModel","ClientModel","TherapistModel","jsxDEV","_jsxDEV","SupabaseDemo","_s","connectionStatus","setConnectionStatus","user","setUser","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","modelTestResult","setModelTestResult","modelTestLoading","setModelTestLoading","checkConnection","isHealthy","checkHealth","data","subscription","auth","onAuthStateChange","event","session","console","log","getInitialSession","getSession","unsubscribe","handleSignUp","e","preventDefault","error","signUp","err","handleSignIn","signIn","handleSignOut","signOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Error","userData","getById","id","JSON","stringify","newUser","create","role","first_name","last_name","client","user_id","profile_data","interests","prev","disabled","htmlFor","type","value","onChange","target","required","includes","jsx","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/client/src/components/SupabaseDemo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../services/supabaseClient';\nimport supabaseService from '../services/supabaseService';\n// Import our models\nimport { UserModel, ClientModel, TherapistModel } from '../models';\n\nconst SupabaseDemo = () => {\n  const [connectionStatus, setConnectionStatus] = useState('Checking...');\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // State for model testing\n  const [modelTestResult, setModelTestResult] = useState('');\n  const [modelTestLoading, setModelTestLoading] = useState(false);\n\n  // Check Supabase connection on component mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      const isHealthy = await supabaseService.checkHealth();\n      setConnectionStatus(isHealthy ? 'Connected' : 'Disconnected');\n    };\n\n    checkConnection();\n\n    // Set up auth state change listener\n    const { data: { subscription } } = supabaseService.auth.onAuthStateChange((event, session) => {\n      console.log('Auth event:', event);\n      if (session) {\n        setUser(session.user);\n      } else {\n        setUser(null);\n      }\n    });\n\n    // Check for existing session\n    const getInitialSession = async () => {\n      const { data } = await supabaseService.auth.getSession();\n      if (data.session) {\n        setUser(data.session.user);\n      }\n    };\n\n    getInitialSession();\n\n    // Cleanup subscription on unmount\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Handle sign up\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      const { data, error } = await supabaseService.auth.signUp(email, password);\n      \n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Sign up successful! Check your email for confirmation.');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle sign in\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      const { data, error } = await supabaseService.auth.signIn(email, password);\n      \n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Sign in successful!');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle sign out\n  const handleSignOut = async () => {\n    setLoading(true);\n    setMessage('');\n\n    try {\n      const { error } = await supabaseService.auth.signOut();\n      \n      if (error) {\n        setMessage(`Error: ${error.message}`);\n      } else {\n        setMessage('Signed out successfully!');\n      }\n    } catch (err) {\n      setMessage(`Unexpected error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"supabase-demo\">\n      <h2>Supabase Integration Demo</h2>\n      \n      <div className=\"connection-status\">\n        <p>\n          <strong>Connection Status:</strong> \n          <span className={connectionStatus === 'Connected' ? 'connected' : 'disconnected'}>\n            {connectionStatus}\n          </span>\n        </p>\n      </div>\n\n      <div className=\"mt-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">TypeScript Models Test</h2>\n        <p className=\"mb-4\">Test our TypeScript models for interacting with the database:</p>\n        \n        <button\n          onClick={async () => {\n            setModelTestLoading(true);\n            setModelTestResult('');\n            \n            try {\n              // Test UserModel\n              if (!user) {\n                throw new Error('You must be signed in to test the models');\n              }\n              \n              // Try to get the current user from the database\n              const userData = await UserModel.getById(user.id);\n              \n              if (userData) {\n                setModelTestResult(`Successfully retrieved user data: ${JSON.stringify(userData)}`);\n              } else {\n                // If user doesn't exist in the database yet, create them\n                const newUser = await UserModel.create({\n                  id: user.id,\n                  email: user.email,\n                  role: 'client',\n                  first_name: 'Test',\n                  last_name: 'User'\n                });\n                \n                if (newUser) {\n                  setModelTestResult(`Successfully created user: ${JSON.stringify(newUser)}`);\n                  \n                  // Test creating a client record\n                  const client = await ClientModel.create({\n                    user_id: user.id,\n                    profile_data: { interests: ['therapy', 'wellness'] }\n                  });\n                  \n                  if (client) {\n                    setModelTestResult(prev => prev + '\\n\\nSuccessfully created client: ' + JSON.stringify(client));\n                  }\n                } else {\n                  throw new Error('Failed to create user record');\n                }\n              }\n            } catch (error) {\n              setModelTestResult(`Error testing models: ${error.message}`);\n            } finally {\n              setModelTestLoading(false);\n            }\n          }}\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded\"\n          disabled={modelTestLoading}\n        >\n          {modelTestLoading ? 'Testing...' : 'Test Models'}\n        </button>\n        \n        {modelTestResult && (\n          <div className=\"mt-4 p-4 bg-gray-100 rounded overflow-auto max-h-60\">\n            <pre className=\"whitespace-pre-wrap\">{modelTestResult}</pre>\n          </div>\n        )}\n      </div>\n\n      {user ? (\n        <div className=\"user-profile\">\n          <h3>User Profile</h3>\n          <p><strong>Email:</strong> {user.email}</p>\n          <p><strong>ID:</strong> {user.id}</p>\n          <button \n            onClick={handleSignOut}\n            disabled={loading}\n          >\n            {loading ? 'Signing Out...' : 'Sign Out'}\n          </button>\n        </div>\n      ) : (\n        <div className=\"auth-form\">\n          <h3>Authentication</h3>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"button-group\">\n              <button\n                type=\"button\"\n                onClick={handleSignIn}\n                disabled={loading}\n              >\n                {loading ? 'Signing In...' : 'Sign In'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleSignUp}\n                disabled={loading}\n              >\n                {loading ? 'Signing Up...' : 'Sign Up'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {message && (\n        <div className={`message ${message.includes('Error') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n\n      <div className=\"demo-section\">\n        <h3>Additional Features</h3>\n        <p>\n          This component demonstrates basic authentication with Supabase.\n          The full supabaseService.js includes methods for:\n        </p>\n        <ul>\n          <li>Database operations (fetch, insert, update, delete)</li>\n          <li>Storage management (upload, download, list files)</li>\n          <li>Realtime subscriptions</li>\n          <li>RPC function calls</li>\n        </ul>\n      </div>\n\n      <style jsx>{`\n        .supabase-demo {\n          max-width: 600px;\n          margin: 0 auto;\n          padding: 20px;\n          font-family: Arial, sans-serif;\n        }\n        .connection-status {\n          margin-bottom: 20px;\n          padding: 10px;\n          background-color: #f5f5f5;\n          border-radius: 4px;\n        }\n        .connected {\n          color: green;\n          font-weight: bold;\n        }\n        .disconnected {\n          color: red;\n          font-weight: bold;\n        }\n        .auth-form, .user-profile {\n          margin-bottom: 20px;\n          padding: 15px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .form-group {\n          margin-bottom: 15px;\n        }\n        .form-group label {\n          display: block;\n          margin-bottom: 5px;\n        }\n        .form-group input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .button-group {\n          display: flex;\n          gap: 10px;\n        }\n        button {\n          padding: 8px 16px;\n          background-color: #4285f4;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        button:hover {\n          background-color: #3367d6;\n        }\n        button:disabled {\n          background-color: #cccccc;\n          cursor: not-allowed;\n        }\n        .message {\n          margin: 15px 0;\n          padding: 10px;\n          border-radius: 4px;\n        }\n        .error {\n          background-color: #ffebee;\n          color: #c62828;\n        }\n        .success {\n          background-color: #e8f5e9;\n          color: #2e7d32;\n        }\n        .demo-section {\n          margin-top: 20px;\n          padding: 15px;\n          background-color: #f5f5f5;\n          border-radius: 4px;\n        }\n        ul {\n          padding-left: 20px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default SupabaseDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}