{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [minimized, setMinimized] = useState(false);\n\n  // Load minimized state from localStorage\n  useEffect(() => {\n    const savedState = localStorage.getItem('dev_login_minimized');\n    if (savedState) {\n      setMinimized(savedState === 'true');\n    }\n  }, []);\n\n  // Save minimized state to localStorage\n  const toggleMinimized = () => {\n    const newState = !minimized;\n    setMinimized(newState);\n    localStorage.setItem('dev_login_minimized', String(newState));\n  };\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = userType => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n      const user = mockUsers[userType];\n\n      // Create mock user data with all necessary fields\n      const mockUser = {\n        id: `${userType}-1`,\n        email: user.email,\n        role: user.role,\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n        profile_data: {\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n        }\n      };\n\n      // Create a mock Supabase session structure\n      const mockSession = {\n        provider_token: null,\n        provider_refresh_token: null,\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        expires_in: 3600,\n        expires_at: Math.floor(Date.now() / 1000) + 3600,\n        token_type: 'bearer',\n        user: mockUser\n      };\n\n      // Store in localStorage with the Supabase project ID in the correct format\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify({\n        currentSession: mockSession,\n        expiresAt: mockSession.expires_at\n      }));\n\n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      console.log(`âœ… Mock login successful as ${userType}`);\n\n      // Navigate to the appropriate dashboard\n      setTimeout(() => {\n        switch (userType) {\n          case 'client':\n            window.location.href = '/client/dashboard';\n            break;\n          case 'therapist':\n            window.location.href = '/therapist/dashboard';\n            break;\n          case 'admin':\n            window.location.href = '/admin/dashboard';\n            break;\n          default:\n            window.location.reload();\n        }\n      }, 500);\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 z-50 transition-all duration-300 ease-in-out overflow-hidden\",\n    style: {\n      maxHeight: minimized ? '40px' : '350px',\n      width: minimized ? '180px' : '250px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-2 border-b border-gray-200 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-semibold text-gray-800\",\n        children: \"Development Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMinimized,\n        className: \"text-gray-500 hover:text-gray-700 focus:outline-none\",\n        children: minimized ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs\",\n          children: \"\\u25BC Expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs\",\n          children: \"\\u25B2 Minimize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      style: {\n        display: minimized ? 'none' : 'block'\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLogin('client'),\n          disabled: loading,\n          className: \"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\",\n          children: loading ? 'Logging in...' : 'Login as Client'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLogin('therapist'),\n          disabled: loading,\n          className: \"w-full px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors disabled:opacity-50\",\n          children: loading ? 'Logging in...' : 'Login as Therapist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLogin('admin'),\n          disabled: loading,\n          className: \"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\",\n          children: loading ? 'Logging in...' : 'Login as Admin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 pt-2 border-t border-gray-200 text-xs text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Note: Default credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", mockUsers.client.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Password: \", mockUsers.client.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(DevLogin, \"IIEs3Nfx80rSuCdpnZhmvJ/oe2s=\", false, function () {\n  return [useNavigate];\n});\n_c = DevLogin;\nexport default DevLogin;\nvar _c;\n$RefreshReg$(_c, \"DevLogin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","DevLogin","_s","navigate","loading","setLoading","error","setError","minimized","setMinimized","savedState","localStorage","getItem","toggleMinimized","newState","setItem","String","mockUsers","client","email","password","role","therapist","admin","handleLogin","userType","Error","user","mockUser","id","name","charAt","toUpperCase","slice","profile_data","mockSession","provider_token","provider_refresh_token","access_token","Math","random","toString","substring","refresh_token","expires_in","expires_at","floor","Date","now","token_type","JSON","stringify","currentSession","expiresAt","console","log","setTimeout","window","location","href","reload","message","className","style","maxHeight","width","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","display","disabled","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nconst DevLogin = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [minimized, setMinimized] = useState(false);\n  \n  // Load minimized state from localStorage\n  useEffect(() => {\n    const savedState = localStorage.getItem('dev_login_minimized');\n    if (savedState) {\n      setMinimized(savedState === 'true');\n    }\n  }, []);\n  \n  // Save minimized state to localStorage\n  const toggleMinimized = () => {\n    const newState = !minimized;\n    setMinimized(newState);\n    localStorage.setItem('dev_login_minimized', String(newState));\n  };\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = (userType) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n\n      const user = mockUsers[userType];\n      \n      // Create mock user data with all necessary fields\n      const mockUser = {\n        id: `${userType}-1`,\n        email: user.email,\n        role: user.role,\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n        profile_data: {\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n        }\n      };\n      \n      // Create a mock Supabase session structure\n      const mockSession = {\n        provider_token: null,\n        provider_refresh_token: null,\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        expires_in: 3600,\n        expires_at: Math.floor(Date.now() / 1000) + 3600,\n        token_type: 'bearer',\n        user: mockUser\n      };\n      \n      // Store in localStorage with the Supabase project ID in the correct format\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify({\n        currentSession: mockSession,\n        expiresAt: mockSession.expires_at\n      }));\n      \n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      \n      console.log(`âœ… Mock login successful as ${userType}`);\n      \n      // Navigate to the appropriate dashboard\n      setTimeout(() => {\n        switch (userType) {\n          case 'client':\n            window.location.href = '/client/dashboard';\n            break;\n          case 'therapist':\n            window.location.href = '/therapist/dashboard';\n            break;\n          case 'admin':\n            window.location.href = '/admin/dashboard';\n            break;\n          default:\n            window.location.reload();\n        }\n      }, 500);\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 z-50 transition-all duration-300 ease-in-out overflow-hidden\"\n         style={{ maxHeight: minimized ? '40px' : '350px', width: minimized ? '180px' : '250px' }}\n    >\n      <div className=\"flex items-center justify-between p-2 border-b border-gray-200 bg-gray-50\">\n        <h3 className=\"text-sm font-semibold text-gray-800\">Development Login</h3>\n        <button \n          onClick={toggleMinimized}\n          className=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\n        >\n          {minimized ? \n            <span className=\"text-xs\">â–¼ Expand</span> : \n            <span className=\"text-xs\">â–² Minimize</span>\n          }\n        </button>\n      </div>\n      \n      <div className=\"p-3\" style={{ display: minimized ? 'none' : 'block' }}>\n        {error && (\n          <div className=\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\">\n            {error}\n          </div>\n        )}\n        \n        <div className=\"space-y-2\">\n          <button\n            onClick={() => handleLogin('client')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Client'}\n          </button>\n          <button\n            onClick={() => handleLogin('therapist')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Therapist'}\n          </button>\n          <button\n            onClick={() => handleLogin('admin')}\n            disabled={loading}\n            className=\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login as Admin'}\n          </button>\n          \n          <div className=\"mt-3 pt-2 border-t border-gray-200 text-xs text-gray-500\">\n            <p>Note: Default credentials</p>\n            <p>Email: {mockUsers.client.email}</p>\n            <p>Password: {mockUsers.client.password}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DevLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}