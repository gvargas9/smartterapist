{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/client/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  role\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n\n  // In production mode, check authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not logged in, redirect to login\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role is specified and doesn't match, redirect to appropriate dashboard\n  if (role && user.role !== role) {\n    if (user.role === 'client') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/client/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'therapist') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/therapist/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'admin') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/admin/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    } else {\n      // Unknown role, log out for safety\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // If everything is fine, render the child routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","role","_s","user","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nconst ProtectedRoute = ({ role }) => {\n  const { user, loading } = useAuth();\n  \n  // In production mode, check authentication\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n  \n  // If not logged in, redirect to login\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // If role is specified and doesn't match, redirect to appropriate dashboard\n  if (role && user.role !== role) {\n    if (user.role === 'client') {\n      return <Navigate to=\"/client/dashboard\" replace />;\n    } else if (user.role === 'therapist') {\n      return <Navigate to=\"/therapist/dashboard\" replace />;\n    } else if (user.role === 'admin') {\n      return <Navigate to=\"/admin/dashboard\" replace />;\n    } else {\n      // Unknown role, log out for safety\n      return <Navigate to=\"/login\" replace />;\n    }\n  }\n  \n  // If everything is fine, render the child routes\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;;EAEnC;EACA,IAAIO,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKM,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACxDP,OAAA;QAAKM,SAAS,EAAC;MAAmE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACP,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIT,IAAI,IAAIE,IAAI,CAACF,IAAI,KAAKA,IAAI,EAAE;IAC9B,IAAIE,IAAI,CAACF,IAAI,KAAK,QAAQ,EAAE;MAC1B,oBAAOF,OAAA,CAACJ,QAAQ;QAACgB,EAAE,EAAC,mBAAmB;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpD,CAAC,MAAM,IAAIP,IAAI,CAACF,IAAI,KAAK,WAAW,EAAE;MACpC,oBAAOF,OAAA,CAACJ,QAAQ;QAACgB,EAAE,EAAC,sBAAsB;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvD,CAAC,MAAM,IAAIP,IAAI,CAACF,IAAI,KAAK,OAAO,EAAE;MAChC,oBAAOF,OAAA,CAACJ,QAAQ;QAACgB,EAAE,EAAC,kBAAkB;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnD,CAAC,MAAM;MACL;MACA,oBAAOX,OAAA,CAACJ,QAAQ;QAACgB,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC;EACF;;EAEA;EACA,oBAAOX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACR,EAAA,CAjCIF,cAAc;EAAA,QACQH,OAAO;AAAA;AAAAgB,EAAA,GAD7Bb,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}