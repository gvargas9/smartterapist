{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = userType => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n      const user = mockUsers[userType];\n\n      // Create a mock session structure similar to what Supabase would create\n      const mockSession = {\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        user: {\n          id: `${userType}-1`,\n          email: user.email,\n          role: user.role,\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n          profile_data: {\n            name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n          }\n        }\n      };\n\n      // Store mock session in localStorage\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify(mockSession));\n\n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockSession.user));\n      console.log(`Mock login successful as ${userType}`);\n\n      // Force reload the page to trigger the auth state change\n      window.location.reload();\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-3 text-gray-800\",\n      children: \"Development Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('client'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Client'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('therapist'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Therapist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('admin'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Admin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: You may need to create these users in Supabase first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", mockUsers.client.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", mockUsers.client.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(DevLogin, \"morcnhKrFckrV3McLd/531yOsR0=\", false, function () {\n  return [useNavigate];\n});\n_c = DevLogin;\nexport default DevLogin;\nvar _c;\n$RefreshReg$(_c, \"DevLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DevLogin","_s","navigate","loading","setLoading","error","setError","mockUsers","client","email","password","role","therapist","admin","handleLogin","userType","Error","user","mockSession","access_token","Math","random","toString","substring","refresh_token","id","name","charAt","toUpperCase","slice","profile_data","localStorage","setItem","JSON","stringify","console","log","window","location","reload","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nconst DevLogin = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = (userType) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n\n      const user = mockUsers[userType];\n      \n      // Create a mock session structure similar to what Supabase would create\n      const mockSession = {\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        user: {\n          id: `${userType}-1`,\n          email: user.email,\n          role: user.role,\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n          profile_data: {\n            name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n          }\n        }\n      };\n      \n      // Store mock session in localStorage\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify(mockSession));\n      \n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockSession.user));\n      \n      console.log(`Mock login successful as ${userType}`);\n      \n      // Force reload the page to trigger the auth state change\n      window.location.reload();\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\">\n      <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">Development Login</h3>\n      \n      {error && (\n        <div className=\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"space-y-2\">\n        <button\n          onClick={() => handleLogin('client')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Client'}\n        </button>\n        <button\n          onClick={() => handleLogin('therapist')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Therapist'}\n        </button>\n        <button\n          onClick={() => handleLogin('admin')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Admin'}\n        </button>\n      </div>\n      \n      <div className=\"mt-3 text-xs text-gray-500\">\n        <p>Note: You may need to create these users in Supabase first.</p>\n        <p>Email: {mockUsers.client.email}</p>\n        <p>Password: {mockUsers.client.password}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DevLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMW,SAAS,GAAG;IAChBC,MAAM,EAAE;MACNC,KAAK,EAAE,oBAAoB;MAC3BC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTH,KAAK,EAAE,uBAAuB;MAC9BC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE;IACR,CAAC;IACDE,KAAK,EAAE;MACLJ,KAAK,EAAE,mBAAmB;MAC1BC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE;IACR;EACF,CAAC;;EAED;EACA,MAAMG,WAAW,GAAIC,QAAQ,IAAK;IAChC,IAAI;MACFX,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MAEZ,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC,EAAE;QACxB,MAAM,IAAIC,KAAK,CAAC,sBAAsBD,QAAQ,EAAE,CAAC;MACnD;MAEA,MAAME,IAAI,GAAGV,SAAS,CAACQ,QAAQ,CAAC;;MAEhC;MACA,MAAMG,WAAW,GAAG;QAClBC,YAAY,EAAE,aAAa,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;QACrEC,aAAa,EAAE,eAAe,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;QACxEN,IAAI,EAAE;UACJQ,EAAE,EAAE,GAAGV,QAAQ,IAAI;UACnBN,KAAK,EAAEQ,IAAI,CAACR,KAAK;UACjBE,IAAI,EAAEM,IAAI,CAACN,IAAI;UACfe,IAAI,EAAET,IAAI,CAACS,IAAI,IAAI,GAAGX,QAAQ,CAACY,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC,OAAO;UACjFC,YAAY,EAAE;YACZJ,IAAI,EAAET,IAAI,CAACS,IAAI,IAAI,GAAGX,QAAQ,CAACY,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC;UAC5E;QACF;MACF,CAAC;;MAED;MACAE,YAAY,CAACC,OAAO,CAAC,oCAAoC,EAAEC,IAAI,CAACC,SAAS,CAAChB,WAAW,CAAC,CAAC;;MAEvF;MACAa,YAAY,CAACC,OAAO,CAAC,0BAA0B,EAAEC,IAAI,CAACC,SAAS,CAAChB,WAAW,CAACD,IAAI,CAAC,CAAC;MAElFkB,OAAO,CAACC,GAAG,CAAC,4BAA4BrB,QAAQ,EAAE,CAAC;;MAEnD;MACAsB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACd8B,OAAO,CAAC9B,KAAK,CAAC,4BAA4BU,QAAQ,GAAG,EAAEV,KAAK,CAAC;MAC7DC,QAAQ,CAACD,KAAK,CAACmC,OAAO,CAAC;IACzB,CAAC,SAAS;MACRpC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA;IAAK0C,SAAS,EAAC,sFAAsF;IAAAC,QAAA,gBACnG3C,OAAA;MAAI0C,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE9EzC,KAAK,iBACJN,OAAA;MAAK0C,SAAS,EAAC,kDAAkD;MAAAC,QAAA,EAC9DrC;IAAK;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED/C,OAAA;MAAK0C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB3C,OAAA;QACEgD,OAAO,EAAEA,CAAA,KAAMjC,WAAW,CAAC,QAAQ,CAAE;QACrCkC,QAAQ,EAAE7C,OAAQ;QAClBsC,SAAS,EAAC,yGAAyG;QAAAC,QAAA,EAElHvC,OAAO,GAAG,eAAe,GAAG;MAAiB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACT/C,OAAA;QACEgD,OAAO,EAAEA,CAAA,KAAMjC,WAAW,CAAC,WAAW,CAAE;QACxCkC,QAAQ,EAAE7C,OAAQ;QAClBsC,SAAS,EAAC,6GAA6G;QAAAC,QAAA,EAEtHvC,OAAO,GAAG,eAAe,GAAG;MAAoB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACT/C,OAAA;QACEgD,OAAO,EAAEA,CAAA,KAAMjC,WAAW,CAAC,OAAO,CAAE;QACpCkC,QAAQ,EAAE7C,OAAQ;QAClBsC,SAAS,EAAC,uGAAuG;QAAAC,QAAA,EAEhHvC,OAAO,GAAG,eAAe,GAAG;MAAgB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/C,OAAA;MAAK0C,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzC3C,OAAA;QAAA2C,QAAA,EAAG;MAA2D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClE/C,OAAA;QAAA2C,QAAA,GAAG,SAAO,EAACnC,SAAS,CAACC,MAAM,CAACC,KAAK;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC/C,OAAA;QAAA2C,QAAA,GAAG,YAAU,EAACnC,SAAS,CAACC,MAAM,CAACE,QAAQ;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA9GID,QAAQ;EAAA,QACKH,WAAW;AAAA;AAAAoD,EAAA,GADxBjD,QAAQ;AAgHd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}