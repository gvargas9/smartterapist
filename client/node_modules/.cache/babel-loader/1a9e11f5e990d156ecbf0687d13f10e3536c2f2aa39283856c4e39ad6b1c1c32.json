{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../../hooks/useAuth';import{supabase}from'../../services/supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isRecording,setIsRecording]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const messagesEndRef=useRef(null);const{user}=useAuth();// Scroll to bottom of messages\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// Load conversation history\nuseEffect(()=>{const loadMessages=async()=>{try{const{data,error}=await supabase.from('messages').select('*').eq('conversation_id',getCurrentConversationId()).order('timestamp',{ascending:true});if(error)throw error;setMessages(data||[]);}catch(error){console.error('Error loading messages:',error);}};loadMessages();},[]);// Get or create conversation ID\nconst getCurrentConversationId=()=>{// For now, using a simple timestamp-based ID. In production, manage this properly\nreturn localStorage.getItem('currentConversationId')||localStorage.setItem('currentConversationId',`conv_${Date.now()}`);};// Handle text message submission\nconst handleSubmit=async e=>{e.preventDefault();if(!inputMessage.trim())return;const newMessage={conversation_id:getCurrentConversationId(),sender:'user',text:inputMessage,timestamp:new Date().toISOString()};setMessages(prev=>[...prev,newMessage]);setInputMessage('');setIsProcessing(true);try{// Save message to database\nconst{error}=await supabase.from('messages').insert([newMessage]);if(error)throw error;// Get AI response\nconst response=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:inputMessage,conversation_id:getCurrentConversationId(),user_id:user.id})});if(!response.ok)throw new Error('Failed to get AI response');const aiResponse=await response.json();// Save AI response to database and update UI\nconst aiMessage={conversation_id:getCurrentConversationId(),sender:'ai',text:aiResponse.message,timestamp:new Date().toISOString()};const{error:aiError}=await supabase.from('messages').insert([aiMessage]);if(aiError)throw aiError;setMessages(prev=>[...prev,aiMessage]);}catch(error){console.error('Error processing message:',error);// Show error in UI\nsetMessages(prev=>[...prev,{sender:'system',text:'Sorry, there was an error processing your message. Please try again.',timestamp:new Date().toISOString()}]);}finally{setIsProcessing(false);}};// Handle voice recording\nconst toggleRecording=async()=>{if(isRecording){// Stop recording and process audio\nsetIsRecording(false);// Add audio processing logic here\n}else{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});// Add recording logic here\nsetIsRecording(true);}catch(error){console.error('Error accessing microphone:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-[calc(100vh-12rem)]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4\",children:[messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.sender==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`max-w-[70%] rounded-lg p-3 ${message.sender==='user'?'bg-primary-100 text-primary-900':message.sender==='system'?'bg-red-100 text-red-900':'bg-secondary-100 text-secondary-900'}`,children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:message.text}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-secondary-500 mt-1\",children:new Date(message.timestamp).toLocaleTimeString()})]})},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t p-4 bg-white\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),disabled:isProcessing,placeholder:\"Type your message...\",className:\"flex-1 rounded-lg border border-secondary-300 p-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleRecording,className:`p-2 rounded-lg ${isRecording?'bg-red-500 text-white':'bg-secondary-100 text-secondary-600'}`,children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"})})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!inputMessage.trim()||isProcessing,className:\"bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50\",children:isProcessing?/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin h-5 w-5\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}):'Send'})]})})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","supabase","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","inputMessage","setInputMessage","isRecording","setIsRecording","isProcessing","setIsProcessing","messagesEndRef","user","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","data","error","from","select","eq","getCurrentConversationId","order","ascending","console","localStorage","getItem","setItem","Date","now","handleSubmit","e","preventDefault","trim","newMessage","conversation_id","sender","text","timestamp","toISOString","prev","insert","response","fetch","method","headers","body","JSON","stringify","message","user_id","id","ok","Error","aiResponse","json","aiMessage","aiError","toggleRecording","stream","navigator","mediaDevices","getUserMedia","audio","className","children","map","index","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","disabled","placeholder","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","cx","cy","r"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/pages/client/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { supabase } from '../../services/supabaseClient';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const messagesEndRef = useRef(null);\n  const { user } = useAuth();\n  \n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Load conversation history\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('messages')\n          .select('*')\n          .eq('conversation_id', getCurrentConversationId())\n          .order('timestamp', { ascending: true });\n          \n        if (error) throw error;\n        \n        setMessages(data || []);\n      } catch (error) {\n        console.error('Error loading messages:', error);\n      }\n    };\n    \n    loadMessages();\n  }, []);\n  \n  // Get or create conversation ID\n  const getCurrentConversationId = () => {\n    // For now, using a simple timestamp-based ID. In production, manage this properly\n    return localStorage.getItem('currentConversationId') || \n           localStorage.setItem('currentConversationId', `conv_${Date.now()}`);\n  };\n  \n  // Handle text message submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    \n    const newMessage = {\n      conversation_id: getCurrentConversationId(),\n      sender: 'user',\n      text: inputMessage,\n      timestamp: new Date().toISOString(),\n    };\n    \n    setMessages(prev => [...prev, newMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n    \n    try {\n      // Save message to database\n      const { error } = await supabase\n        .from('messages')\n        .insert([newMessage]);\n        \n      if (error) throw error;\n      \n      // Get AI response\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: inputMessage,\n          conversation_id: getCurrentConversationId(),\n          user_id: user.id\n        }),\n      });\n      \n      if (!response.ok) throw new Error('Failed to get AI response');\n      \n      const aiResponse = await response.json();\n      \n      // Save AI response to database and update UI\n      const aiMessage = {\n        conversation_id: getCurrentConversationId(),\n        sender: 'ai',\n        text: aiResponse.message,\n        timestamp: new Date().toISOString(),\n      };\n      \n      const { error: aiError } = await supabase\n        .from('messages')\n        .insert([aiMessage]);\n        \n      if (aiError) throw aiError;\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error processing message:', error);\n      // Show error in UI\n      setMessages(prev => [...prev, {\n        sender: 'system',\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        timestamp: new Date().toISOString(),\n      }]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  // Handle voice recording\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Stop recording and process audio\n      setIsRecording(false);\n      // Add audio processing logic here\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        // Add recording logic here\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    }\n  };\n  \n  return (\n    <div className=\"flex flex-col h-[calc(100vh-12rem)]\">\n      {/* Messages area */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[70%] rounded-lg p-3 ${\n                message.sender === 'user'\n                  ? 'bg-primary-100 text-primary-900'\n                  : message.sender === 'system'\n                  ? 'bg-red-100 text-red-900'\n                  : 'bg-secondary-100 text-secondary-900'\n              }`}\n            >\n              <p className=\"text-sm\">{message.text}</p>\n              <span className=\"text-xs text-secondary-500 mt-1\">\n                {new Date(message.timestamp).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Input area */}\n      <div className=\"border-t p-4 bg-white\">\n        <form onSubmit={handleSubmit} className=\"flex space-x-4\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            disabled={isProcessing}\n            placeholder=\"Type your message...\"\n            className=\"flex-1 rounded-lg border border-secondary-300 p-2 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n          />\n          <button\n            type=\"button\"\n            onClick={toggleRecording}\n            className={`p-2 rounded-lg ${\n              isRecording\n                ? 'bg-red-500 text-white'\n                : 'bg-secondary-100 text-secondary-600'\n            }`}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n              />\n            </svg>\n          </button>\n          <button\n            type=\"submit\"\n            disabled={!inputMessage.trim() || isProcessing}\n            className=\"bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50\"\n          >\n            {isProcessing ? (\n              <svg\n                className=\"animate-spin h-5 w-5\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n              >\n                <circle\n                  className=\"opacity-25\"\n                  cx=\"12\"\n                  cy=\"12\"\n                  r=\"10\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"4\"\n                ></circle>\n                <path\n                  className=\"opacity-75\"\n                  fill=\"currentColor\"\n                  d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                ></path>\n              </svg>\n            ) : (\n              'Send'\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}