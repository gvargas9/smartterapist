{"ast":null,"code":"/**\n * useLanguage Hook\n * \n * Custom hook for accessing the language context and i18n functionality\n * throughout the application.\n */import{useContext}from'react';import{useTranslation}from'react-i18next';import LanguageContext from'../context/LanguageContext';export const useLanguage=()=>{const{t}=useTranslation();const languageContext=useContext(LanguageContext);if(!languageContext){throw new Error('useLanguage must be used within a LanguageProvider');}const{currentLanguage,availableLanguages,changeLanguage,addLanguage}=languageContext;return{t,// Translation function\ncurrentLanguage,// Current language code (e.g., 'en', 'es')\navailableLanguages,// Array of available languages\nchangeLanguage,// Function to change the current language\naddLanguage// Function to add a new language\n};};export default useLanguage;","map":{"version":3,"names":["useContext","useTranslation","LanguageContext","useLanguage","t","languageContext","Error","currentLanguage","availableLanguages","changeLanguage","addLanguage"],"sources":["/Users/gio/development/smartterapist/client/src/hooks/useLanguage.js"],"sourcesContent":["/**\n * useLanguage Hook\n * \n * Custom hook for accessing the language context and i18n functionality\n * throughout the application.\n */\n\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageContext from '../context/LanguageContext';\n\nexport const useLanguage = () => {\n  const { t } = useTranslation();\n  const languageContext = useContext(LanguageContext);\n  \n  if (!languageContext) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  \n  const { \n    currentLanguage, \n    availableLanguages, \n    changeLanguage, \n    addLanguage \n  } = languageContext;\n  \n  return {\n    t,                  // Translation function\n    currentLanguage,    // Current language code (e.g., 'en', 'es')\n    availableLanguages, // Array of available languages\n    changeLanguage,     // Function to change the current language\n    addLanguage         // Function to add a new language\n  };\n};\n\nexport default useLanguage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,CAAAC,eAAe,KAAM,4BAA4B,CAExD,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAEC,CAAE,CAAC,CAAGH,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAI,eAAe,CAAGL,UAAU,CAACE,eAAe,CAAC,CAEnD,GAAI,CAACG,eAAe,CAAE,CACpB,KAAM,IAAI,CAAAC,KAAK,CAAC,oDAAoD,CAAC,CACvE,CAEA,KAAM,CACJC,eAAe,CACfC,kBAAkB,CAClBC,cAAc,CACdC,WACF,CAAC,CAAGL,eAAe,CAEnB,MAAO,CACLD,CAAC,CAAmB;AACpBG,eAAe,CAAK;AACpBC,kBAAkB,CAAE;AACpBC,cAAc,CAAM;AACpBC,WAAoB;AACtB,CAAC,CACH,CAAC,CAED,cAAe,CAAAP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}