{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../../hooks/useAuth';import{chatService}from'../../services/chatService';import{PaperAirplaneIcon,MicrophoneIcon,XCircleIcon}from'@heroicons/react/24/solid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isRecording,setIsRecording]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[currentConversationId,setCurrentConversationId]=useState(null);const[audioStream,setAudioStream]=useState(null);const[mediaRecorder,setMediaRecorder]=useState(null);const[recordedChunks,setRecordedChunks]=useState([]);const[isTyping,setIsTyping]=useState(false);const messagesEndRef=useRef(null);const inputRef=useRef(null);const{user}=useAuth();// Scroll to bottom of messages\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// Initialize or load existing conversation\nuseEffect(()=>{const initializeConversation=async()=>{try{// Check if there's a stored conversation ID\nconst storedConversationId=localStorage.getItem('currentConversationId');if(storedConversationId){setCurrentConversationId(storedConversationId);// Load messages for this conversation\nconst messages=await chatService.getConversationHistory(storedConversationId);setMessages(messages);}else{var _user$profile_data;// Create a new conversation\nconst newConversationId=await chatService.createConversation(user.id);setCurrentConversationId(newConversationId);localStorage.setItem('currentConversationId',newConversationId);// Add a welcome message\nconst welcomeMessage={id:`welcome-${Date.now()}`,conversation_id:newConversationId,sender:'ai',text:`Hello ${((_user$profile_data=user.profile_data)===null||_user$profile_data===void 0?void 0:_user$profile_data.name)||'there'}! How can I help you today?`,timestamp:new Date().toISOString(),sentiment_score:0.8};await chatService.saveMessage(welcomeMessage);setMessages([welcomeMessage]);}}catch(error){console.error('Error initializing conversation:',error);// Show error in UI\nsetMessages([{id:`error-${Date.now()}`,sender:'system',text:'Sorry, there was an error starting the conversation. Please try refreshing the page.',timestamp:new Date().toISOString()}]);}};if(user){initializeConversation();}// Cleanup function to end conversation when component unmounts\nreturn()=>{if(currentConversationId){chatService.endConversation(currentConversationId).catch(err=>console.error('Error ending conversation:',err));}};},[user]);// Focus on input when messages change\nuseEffect(()=>{if(!isRecording&&inputRef.current){inputRef.current.focus();}},[messages,isRecording]);// Handle text message submission\nconst handleSubmit=async e=>{e.preventDefault();if(!inputMessage.trim()||!currentConversationId)return;const userMessage={conversation_id:currentConversationId,sender:'user',text:inputMessage,timestamp:new Date().toISOString()};// Update UI immediately\nsetMessages(prev=>[...prev,userMessage]);setInputMessage('');setIsProcessing(true);try{// Save message to database\nawait chatService.saveMessage(userMessage);// Show typing indicator\nsetIsTyping(true);// Get AI response\nconst aiResponse=await chatService.getAIResponse(userMessage.text,currentConversationId,user.id);// Hide typing indicator\nsetIsTyping(false);// Create AI message\nconst aiMessage={conversation_id:currentConversationId,sender:'ai',text:aiResponse.message,timestamp:new Date().toISOString(),sentiment_score:aiResponse.sentiment_score};// Save AI response to database\nawait chatService.saveMessage(aiMessage);// Update UI\nsetMessages(prev=>[...prev,aiMessage]);// If this is the 5th message in the conversation, generate a summary\nif(messages.length>=4){chatService.generateSummary(currentConversationId).catch(err=>console.error('Error generating summary:',err));}}catch(error){console.error('Error processing message:',error);setIsTyping(false);// Show error in UI\nsetMessages(prev=>[...prev,{id:`error-${Date.now()}`,sender:'system',text:'Sorry, there was an error processing your message. Please try again.',timestamp:new Date().toISOString()}]);}finally{setIsProcessing(false);}};// Handle voice recording\nconst toggleRecording=async()=>{if(isRecording){// Stop recording\nif(mediaRecorder&&mediaRecorder.state!=='inactive'){mediaRecorder.stop();}if(audioStream){audioStream.getTracks().forEach(track=>track.stop());setAudioStream(null);}setIsRecording(false);}else{try{// Start recording\nconst stream=await navigator.mediaDevices.getUserMedia({audio:true});setAudioStream(stream);const recorder=new MediaRecorder(stream);setMediaRecorder(recorder);const chunks=[];setRecordedChunks(chunks);recorder.ondataavailable=e=>{if(e.data.size>0){chunks.push(e.data);}};recorder.onstop=async()=>{// In a real implementation, you would send this audio to your speech-to-text service\n// For now, we'll just simulate it with a placeholder message\nsetIsProcessing(true);// Simulate processing delay\nsetTimeout(()=>{const transcribedText=\"This is a simulated transcription of voice input.\";setInputMessage(transcribedText);setIsProcessing(false);},1500);};recorder.start();setIsRecording(true);}catch(error){console.error('Error accessing microphone:',error);// Show error in UI\nsetMessages(prev=>[...prev,{id:`error-${Date.now()}`,sender:'system',text:'Sorry, there was an error accessing your microphone. Please check your permissions and try again.',timestamp:new Date().toISOString()}]);}}};// Start a new conversation\nconst startNewConversation=async()=>{try{var _user$profile_data2;// End current conversation if exists\nif(currentConversationId){await chatService.endConversation(currentConversationId);}// Create a new conversation\nconst newConversationId=await chatService.createConversation(user.id);setCurrentConversationId(newConversationId);localStorage.setItem('currentConversationId',newConversationId);// Add a welcome message\nconst welcomeMessage={id:`welcome-${Date.now()}`,conversation_id:newConversationId,sender:'ai',text:`Hello ${((_user$profile_data2=user.profile_data)===null||_user$profile_data2===void 0?void 0:_user$profile_data2.name)||'there'}! How can I help you today?`,timestamp:new Date().toISOString(),sentiment_score:0.8};await chatService.saveMessage(welcomeMessage);setMessages([welcomeMessage]);}catch(error){console.error('Error starting new conversation:',error);// Show error in UI\nsetMessages([{id:`error-${Date.now()}`,sender:'system',text:'Sorry, there was an error starting a new conversation. Please try refreshing the page.',timestamp:new Date().toISOString()}]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-[calc(100vh-12rem)]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border-b p-4 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-secondary-900\",children:\"AI Therapy Session\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startNewConversation,className:\"text-sm px-3 py-1 bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200 transition-colors\",children:\"New Conversation\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\",children:[messages.map((message,index)=>{var _user$profile_data3,_user$profile_data3$n;return/*#__PURE__*/_jsxs(\"div\",{className:`flex ${message.sender==='user'?'justify-end':'justify-start'}`,children:[message.sender!=='user'&&message.sender!=='system'&&/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\",children:\"AI\"}),/*#__PURE__*/_jsxs(\"div\",{className:`max-w-[70%] rounded-lg p-3 shadow-sm ${message.sender==='user'?'bg-primary-500 text-white':message.sender==='system'?'bg-red-100 text-red-900':'bg-white text-secondary-900'}`,children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm whitespace-pre-wrap\",children:message.text}),/*#__PURE__*/_jsx(\"span\",{className:`text-xs ${message.sender==='user'?'text-primary-100':'text-secondary-500'} mt-1 block`,children:new Date(message.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]}),message.sender==='user'&&/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-secondary-200 flex items-center justify-center text-secondary-600 ml-2\",children:((_user$profile_data3=user.profile_data)===null||_user$profile_data3===void 0?void 0:(_user$profile_data3$n=_user$profile_data3.name)===null||_user$profile_data3$n===void 0?void 0:_user$profile_data3$n.charAt(0))||'U'})]},message.id||index);}),isTyping&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\",children:\"AI\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg p-4 shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",style:{animationDelay:'0ms'}}),/*#__PURE__*/_jsx(\"div\",{className:\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",style:{animationDelay:'150ms'}}),/*#__PURE__*/_jsx(\"div\",{className:\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",style:{animationDelay:'300ms'}})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t p-4 bg-white\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),disabled:isProcessing||isRecording,placeholder:isRecording?\"Recording...\":\"Type your message...\",className:\"flex-1 rounded-lg border border-secondary-300 p-3 focus:outline-none focus:ring-2 focus:ring-primary-500\",onKeyDown:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSubmit(e);}}}),isRecording?/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleRecording,className:\"p-3 rounded-lg bg-red-500 text-white hover:bg-red-600 transition-colors\",children:/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-6 w-6\"})}):/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleRecording,disabled:isProcessing,className:\"p-3 rounded-lg bg-secondary-100 text-secondary-600 hover:bg-secondary-200 transition-colors disabled:opacity-50\",children:/*#__PURE__*/_jsx(MicrophoneIcon,{className:\"h-6 w-6\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!inputMessage.trim()||isProcessing||isRecording,className:\"p-3 rounded-lg bg-primary-500 text-white hover:bg-primary-600 transition-colors disabled:opacity-50\",children:/*#__PURE__*/_jsx(PaperAirplaneIcon,{className:\"h-6 w-6\"})})]})})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","chatService","PaperAirplaneIcon","MicrophoneIcon","XCircleIcon","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","inputMessage","setInputMessage","isRecording","setIsRecording","isProcessing","setIsProcessing","currentConversationId","setCurrentConversationId","audioStream","setAudioStream","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","isTyping","setIsTyping","messagesEndRef","inputRef","user","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","initializeConversation","storedConversationId","localStorage","getItem","getConversationHistory","_user$profile_data","newConversationId","createConversation","id","setItem","welcomeMessage","Date","now","conversation_id","sender","text","profile_data","name","timestamp","toISOString","sentiment_score","saveMessage","error","console","endConversation","catch","err","focus","handleSubmit","e","preventDefault","trim","userMessage","prev","aiResponse","getAIResponse","aiMessage","message","length","generateSummary","toggleRecording","state","stop","getTracks","forEach","track","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","data","size","push","onstop","setTimeout","transcribedText","start","startNewConversation","_user$profile_data2","className","children","onClick","map","index","_user$profile_data3","_user$profile_data3$n","toLocaleTimeString","hour","minute","charAt","style","animationDelay","ref","onSubmit","type","value","onChange","target","disabled","placeholder","onKeyDown","key","shiftKey"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/pages/client/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { chatService } from '../../services/chatService';\nimport { PaperAirplaneIcon, MicrophoneIcon, XCircleIcon } from '@heroicons/react/24/solid';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [audioStream, setAudioStream] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const { user } = useAuth();\n  \n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Initialize or load existing conversation\n  useEffect(() => {\n    const initializeConversation = async () => {\n      try {\n        // Check if there's a stored conversation ID\n        const storedConversationId = localStorage.getItem('currentConversationId');\n        \n        if (storedConversationId) {\n          setCurrentConversationId(storedConversationId);\n          \n          // Load messages for this conversation\n          const messages = await chatService.getConversationHistory(storedConversationId);\n          setMessages(messages);\n        } else {\n          // Create a new conversation\n          const newConversationId = await chatService.createConversation(user.id);\n          setCurrentConversationId(newConversationId);\n          localStorage.setItem('currentConversationId', newConversationId);\n          \n          // Add a welcome message\n          const welcomeMessage = {\n            id: `welcome-${Date.now()}`,\n            conversation_id: newConversationId,\n            sender: 'ai',\n            text: `Hello ${user.profile_data?.name || 'there'}! How can I help you today?`,\n            timestamp: new Date().toISOString(),\n            sentiment_score: 0.8\n          };\n          \n          await chatService.saveMessage(welcomeMessage);\n          setMessages([welcomeMessage]);\n        }\n      } catch (error) {\n        console.error('Error initializing conversation:', error);\n        // Show error in UI\n        setMessages([{\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: 'Sorry, there was an error starting the conversation. Please try refreshing the page.',\n          timestamp: new Date().toISOString(),\n        }]);\n      }\n    };\n    \n    if (user) {\n      initializeConversation();\n    }\n    \n    // Cleanup function to end conversation when component unmounts\n    return () => {\n      if (currentConversationId) {\n        chatService.endConversation(currentConversationId).catch(err => \n          console.error('Error ending conversation:', err)\n        );\n      }\n    };\n  }, [user]);\n  \n  // Focus on input when messages change\n  useEffect(() => {\n    if (!isRecording && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages, isRecording]);\n  \n  // Handle text message submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || !currentConversationId) return;\n    \n    const userMessage = {\n      conversation_id: currentConversationId,\n      sender: 'user',\n      text: inputMessage,\n      timestamp: new Date().toISOString(),\n    };\n    \n    // Update UI immediately\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n    \n    try {\n      // Save message to database\n      await chatService.saveMessage(userMessage);\n      \n      // Show typing indicator\n      setIsTyping(true);\n      \n      // Get AI response\n      const aiResponse = await chatService.getAIResponse(userMessage.text, currentConversationId, user.id);\n      \n      // Hide typing indicator\n      setIsTyping(false);\n      \n      // Create AI message\n      const aiMessage = {\n        conversation_id: currentConversationId,\n        sender: 'ai',\n        text: aiResponse.message,\n        timestamp: new Date().toISOString(),\n        sentiment_score: aiResponse.sentiment_score\n      };\n      \n      // Save AI response to database\n      await chatService.saveMessage(aiMessage);\n      \n      // Update UI\n      setMessages(prev => [...prev, aiMessage]);\n      \n      // If this is the 5th message in the conversation, generate a summary\n      if (messages.length >= 4) {\n        chatService.generateSummary(currentConversationId).catch(err => \n          console.error('Error generating summary:', err)\n        );\n      }\n    } catch (error) {\n      console.error('Error processing message:', error);\n      setIsTyping(false);\n      \n      // Show error in UI\n      setMessages(prev => [...prev, {\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        timestamp: new Date().toISOString(),\n      }]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  // Handle voice recording\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Stop recording\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n      }\n      \n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n        setAudioStream(null);\n      }\n      \n      setIsRecording(false);\n    } else {\n      try {\n        // Start recording\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        setAudioStream(stream);\n        \n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n        \n        const chunks = [];\n        setRecordedChunks(chunks);\n        \n        recorder.ondataavailable = (e) => {\n          if (e.data.size > 0) {\n            chunks.push(e.data);\n          }\n        };\n        \n        recorder.onstop = async () => {\n          // In a real implementation, you would send this audio to your speech-to-text service\n          // For now, we'll just simulate it with a placeholder message\n          setIsProcessing(true);\n          \n          // Simulate processing delay\n          setTimeout(() => {\n            const transcribedText = \"This is a simulated transcription of voice input.\";\n            setInputMessage(transcribedText);\n            setIsProcessing(false);\n          }, 1500);\n        };\n        \n        recorder.start();\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n        // Show error in UI\n        setMessages(prev => [...prev, {\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: 'Sorry, there was an error accessing your microphone. Please check your permissions and try again.',\n          timestamp: new Date().toISOString(),\n        }]);\n      }\n    }\n  };\n  \n  // Start a new conversation\n  const startNewConversation = async () => {\n    try {\n      // End current conversation if exists\n      if (currentConversationId) {\n        await chatService.endConversation(currentConversationId);\n      }\n      \n      // Create a new conversation\n      const newConversationId = await chatService.createConversation(user.id);\n      setCurrentConversationId(newConversationId);\n      localStorage.setItem('currentConversationId', newConversationId);\n      \n      // Add a welcome message\n      const welcomeMessage = {\n        id: `welcome-${Date.now()}`,\n        conversation_id: newConversationId,\n        sender: 'ai',\n        text: `Hello ${user.profile_data?.name || 'there'}! How can I help you today?`,\n        timestamp: new Date().toISOString(),\n        sentiment_score: 0.8\n      };\n      \n      await chatService.saveMessage(welcomeMessage);\n      setMessages([welcomeMessage]);\n    } catch (error) {\n      console.error('Error starting new conversation:', error);\n      // Show error in UI\n      setMessages([{\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error starting a new conversation. Please try refreshing the page.',\n        timestamp: new Date().toISOString(),\n      }]);\n    }\n  };\n  \n  return (\n    <div className=\"flex flex-col h-[calc(100vh-12rem)]\">\n      {/* Header */}\n      <div className=\"bg-white border-b p-4 flex justify-between items-center\">\n        <h2 className=\"text-lg font-semibold text-secondary-900\">AI Therapy Session</h2>\n        <button\n          onClick={startNewConversation}\n          className=\"text-sm px-3 py-1 bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200 transition-colors\"\n        >\n          New Conversation\n        </button>\n      </div>\n      \n      {/* Messages area */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\">\n        {messages.map((message, index) => (\n          <div\n            key={message.id || index}\n            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            {message.sender !== 'user' && message.sender !== 'system' && (\n              <div className=\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\">\n                AI\n              </div>\n            )}\n            <div\n              className={`max-w-[70%] rounded-lg p-3 shadow-sm ${\n                message.sender === 'user'\n                  ? 'bg-primary-500 text-white'\n                  : message.sender === 'system'\n                  ? 'bg-red-100 text-red-900'\n                  : 'bg-white text-secondary-900'\n              }`}\n            >\n              <p className=\"text-sm whitespace-pre-wrap\">{message.text}</p>\n              <span className={`text-xs ${message.sender === 'user' ? 'text-primary-100' : 'text-secondary-500'} mt-1 block`}>\n                {new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </span>\n            </div>\n            {message.sender === 'user' && (\n              <div className=\"h-8 w-8 rounded-full bg-secondary-200 flex items-center justify-center text-secondary-600 ml-2\">\n                {user.profile_data?.name?.charAt(0) || 'U'}\n              </div>\n            )}\n          </div>\n        ))}\n        \n        {/* Typing indicator */}\n        {isTyping && (\n          <div className=\"flex justify-start\">\n            <div className=\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\">\n              AI\n            </div>\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex space-x-1\">\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }}></div>\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Input area */}\n      <div className=\"border-t p-4 bg-white\">\n        <form onSubmit={handleSubmit} className=\"flex space-x-2\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            disabled={isProcessing || isRecording}\n            placeholder={isRecording ? \"Recording...\" : \"Type your message...\"}\n            className=\"flex-1 rounded-lg border border-secondary-300 p-3 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n          />\n          \n          {isRecording ? (\n            <button\n              type=\"button\"\n              onClick={toggleRecording}\n              className=\"p-3 rounded-lg bg-red-500 text-white hover:bg-red-600 transition-colors\"\n            >\n              <XCircleIcon className=\"h-6 w-6\" />\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={toggleRecording}\n              disabled={isProcessing}\n              className=\"p-3 rounded-lg bg-secondary-100 text-secondary-600 hover:bg-secondary-200 transition-colors disabled:opacity-50\"\n            >\n              <MicrophoneIcon className=\"h-6 w-6\" />\n            </button>\n          )}\n          \n          <button\n            type=\"submit\"\n            disabled={!inputMessage.trim() || isProcessing || isRecording}\n            className=\"p-3 rounded-lg bg-primary-500 text-white hover:bg-primary-600 transition-colors disabled:opacity-50\"\n          >\n            <PaperAirplaneIcon className=\"h-6 w-6\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}