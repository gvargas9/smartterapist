{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../services/supabaseClient';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n  const handleLogin = async userType => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n      const user = mockUsers[userType];\n\n      // Try to sign in with email and password\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: user.email,\n        password: user.password\n      });\n      if (error) {\n        throw error;\n      }\n      console.log('Login successful:', data);\n\n      // Navigate to the appropriate dashboard based on user type\n      switch (userType) {\n        case 'client':\n          navigate('/client/dashboard');\n          break;\n        case 'therapist':\n          navigate('/therapist/dashboard');\n          break;\n        case 'admin':\n          navigate('/admin/dashboard');\n          break;\n        default:\n          navigate('/');\n      }\n    } catch (error) {\n      console.error(`Error logging in as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-3 text-gray-800\",\n      children: \"Development Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('client'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Client'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('therapist'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Therapist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('admin'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Admin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: You may need to create these users in Supabase first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", mockUsers.client.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", mockUsers.client.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(DevLogin, \"morcnhKrFckrV3McLd/531yOsR0=\", false, function () {\n  return [useNavigate];\n});\n_c = DevLogin;\nexport default DevLogin;\nvar _c;\n$RefreshReg$(_c, \"DevLogin\");","map":{"version":3,"names":["React","useState","useNavigate","supabase","jsxDEV","_jsxDEV","DevLogin","_s","navigate","loading","setLoading","error","setError","mockUsers","client","email","password","role","therapist","admin","handleLogin","userType","Error","user","data","auth","signInWithPassword","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../services/supabaseClient';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nconst DevLogin = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  const handleLogin = async (userType) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n\n      const user = mockUsers[userType];\n      \n      // Try to sign in with email and password\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: user.email,\n        password: user.password\n      });\n      \n      if (error) {\n        throw error;\n      }\n      \n      console.log('Login successful:', data);\n      \n      // Navigate to the appropriate dashboard based on user type\n      switch (userType) {\n        case 'client':\n          navigate('/client/dashboard');\n          break;\n        case 'therapist':\n          navigate('/therapist/dashboard');\n          break;\n        case 'admin':\n          navigate('/admin/dashboard');\n          break;\n        default:\n          navigate('/');\n      }\n    } catch (error) {\n      console.error(`Error logging in as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\">\n      <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">Development Login</h3>\n      \n      {error && (\n        <div className=\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"space-y-2\">\n        <button\n          onClick={() => handleLogin('client')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Client'}\n        </button>\n        <button\n          onClick={() => handleLogin('therapist')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Therapist'}\n        </button>\n        <button\n          onClick={() => handleLogin('admin')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Admin'}\n        </button>\n      </div>\n      \n      <div className=\"mt-3 text-xs text-gray-500\">\n        <p>Note: You may need to create these users in Supabase first.</p>\n        <p>Email: {mockUsers.client.email}</p>\n        <p>Password: {mockUsers.client.password}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DevLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}