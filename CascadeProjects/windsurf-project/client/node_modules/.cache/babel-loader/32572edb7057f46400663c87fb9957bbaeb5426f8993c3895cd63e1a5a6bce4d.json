{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/pages/client/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { chatService } from '../../services/chatService';\nimport { voiceService } from '../../services/voiceService';\nimport { useTranslation } from 'react-i18next';\nimport { PaperAirplaneIcon, MicrophoneIcon, XCircleIcon, SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [audioStream, setAudioStream] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize or load existing conversation\n  useEffect(() => {\n    const initializeConversation = async () => {\n      try {\n        // Check if there's a stored conversation ID\n        const storedConversationId = localStorage.getItem('currentConversationId');\n        if (storedConversationId) {\n          setCurrentConversationId(storedConversationId);\n\n          // Load messages for this conversation\n          const messages = await chatService.getConversationHistory(storedConversationId);\n          setMessages(messages);\n        } else {\n          var _user$profile_data;\n          // Create a new conversation\n          const newConversationId = await chatService.createConversation(user.id);\n          setCurrentConversationId(newConversationId);\n          localStorage.setItem('currentConversationId', newConversationId);\n\n          // Add a welcome message\n          const welcomeMessage = {\n            id: `welcome-${Date.now()}`,\n            conversation_id: newConversationId,\n            sender: 'ai',\n            text: `Hello ${((_user$profile_data = user.profile_data) === null || _user$profile_data === void 0 ? void 0 : _user$profile_data.name) || 'there'}! How can I help you today?`,\n            timestamp: new Date().toISOString(),\n            sentiment_score: 0.8\n          };\n          await chatService.saveMessage(welcomeMessage);\n          setMessages([welcomeMessage]);\n        }\n      } catch (error) {\n        console.error('Error initializing conversation:', error);\n        // Show error in UI\n        setMessages([{\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: 'Sorry, there was an error starting the conversation. Please try refreshing the page.',\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    };\n    if (user) {\n      initializeConversation();\n    }\n\n    // Cleanup function to end conversation when component unmounts\n    return () => {\n      if (currentConversationId) {\n        chatService.endConversation(currentConversationId).catch(err => console.error('Error ending conversation:', err));\n      }\n    };\n  }, [user]);\n\n  // Focus on input when messages change\n  useEffect(() => {\n    if (!isRecording && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages, isRecording]);\n\n  // Handle text message submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim() || !currentConversationId) return;\n    const userMessage = {\n      conversation_id: currentConversationId,\n      sender: 'user',\n      text: inputMessage,\n      timestamp: new Date().toISOString()\n    };\n\n    // Update UI immediately\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n    try {\n      // Save message to database\n      await chatService.saveMessage(userMessage);\n\n      // Show typing indicator\n      setIsTyping(true);\n\n      // Get AI response\n      const aiResponse = await chatService.getAIResponse(userMessage.text, currentConversationId, user.id);\n\n      // Hide typing indicator\n      setIsTyping(false);\n\n      // Create AI message\n      const aiMessage = {\n        conversation_id: currentConversationId,\n        sender: 'ai',\n        text: aiResponse.message,\n        timestamp: new Date().toISOString(),\n        sentiment_score: aiResponse.sentiment_score\n      };\n\n      // Save AI response to database\n      await chatService.saveMessage(aiMessage);\n\n      // Update UI\n      setMessages(prev => [...prev, aiMessage]);\n\n      // If this is the 5th message in the conversation, generate a summary\n      if (messages.length >= 4) {\n        chatService.generateSummary(currentConversationId).catch(err => console.error('Error generating summary:', err));\n      }\n    } catch (error) {\n      console.error('Error processing message:', error);\n      setIsTyping(false);\n\n      // Show error in UI\n      setMessages(prev => [...prev, {\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // State for voice settings\n  const [voiceSettings, setVoiceSettings] = useState({\n    enabled: true,\n    preferredVoice: 'en-US-Neural2-F',\n    speed: 1.0,\n    pitch: 1.0\n  });\n\n  // State for TTS playback\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [audioQueue, setAudioQueue] = useState([]);\n\n  // Get translation function\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  // Load user voice settings\n  useEffect(() => {\n    const loadVoiceSettings = async () => {\n      if (user !== null && user !== void 0 && user.id) {\n        try {\n          const settings = await voiceService.getUserVoiceSettings(user.id);\n          setVoiceSettings(settings);\n        } catch (error) {\n          console.error('Error loading voice settings:', error);\n        }\n      }\n    };\n    loadVoiceSettings();\n  }, [user]);\n\n  // Handle voice recording\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Stop recording\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n      }\n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n        setAudioStream(null);\n      }\n      setIsRecording(false);\n    } else {\n      try {\n        // Start recording\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        setAudioStream(stream);\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n        const chunks = [];\n        setRecordedChunks(chunks);\n        recorder.ondataavailable = e => {\n          if (e.data.size > 0) {\n            chunks.push(e.data);\n          }\n        };\n        recorder.onstop = async () => {\n          try {\n            setIsProcessing(true);\n\n            // Create audio blob from recorded chunks\n            const audioBlob = new Blob(chunks, {\n              type: 'audio/webm'\n            });\n\n            // Get current language for STT\n            const language = i18n.language || 'en';\n            const sttLanguage = language === 'en' ? 'en-US' : language === 'es' ? 'es-ES' : 'en-US';\n\n            // Convert speech to text using ultravox.ai\n            const transcribedText = await voiceService.speechToText(audioBlob, sttLanguage);\n            if (transcribedText) {\n              setInputMessage(transcribedText);\n            }\n          } catch (error) {\n            console.error('Error processing speech to text:', error);\n            setMessages(prev => [...prev, {\n              id: `error-${Date.now()}`,\n              sender: 'system',\n              text: t('chat.speechToTextError'),\n              timestamp: new Date().toISOString()\n            }]);\n          } finally {\n            setIsProcessing(false);\n          }\n        };\n        recorder.start();\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n        // Show error in UI\n        setMessages(prev => [...prev, {\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: t('chat.microphoneError'),\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    }\n  };\n\n  // Start a new conversation\n  const startNewConversation = async () => {\n    try {\n      var _user$profile_data2;\n      // End current conversation if exists\n      if (currentConversationId) {\n        await chatService.endConversation(currentConversationId);\n      }\n\n      // Create a new conversation\n      const newConversationId = await chatService.createConversation(user.id);\n      setCurrentConversationId(newConversationId);\n      localStorage.setItem('currentConversationId', newConversationId);\n\n      // Add a welcome message\n      const welcomeMessage = {\n        id: `welcome-${Date.now()}`,\n        conversation_id: newConversationId,\n        sender: 'ai',\n        text: `Hello ${((_user$profile_data2 = user.profile_data) === null || _user$profile_data2 === void 0 ? void 0 : _user$profile_data2.name) || 'there'}! How can I help you today?`,\n        timestamp: new Date().toISOString(),\n        sentiment_score: 0.8\n      };\n      await chatService.saveMessage(welcomeMessage);\n      setMessages([welcomeMessage]);\n    } catch (error) {\n      console.error('Error starting new conversation:', error);\n      // Show error in UI\n      setMessages([{\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error starting a new conversation. Please try refreshing the page.',\n        timestamp: new Date().toISOString()\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[calc(100vh-12rem)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b p-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold text-secondary-900\",\n        children: \"AI Therapy Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewConversation,\n        className: \"text-sm px-3 py-1 bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200 transition-colors\",\n        children: \"New Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\",\n      children: [messages.map((message, index) => {\n        var _user$profile_data3, _user$profile_data3$n;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: [message.sender !== 'user' && message.sender !== 'system' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\",\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] rounded-lg p-3 shadow-sm ${message.sender === 'user' ? 'bg-primary-500 text-white' : message.sender === 'system' ? 'bg-red-100 text-red-900' : 'bg-white text-secondary-900'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm whitespace-pre-wrap\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-xs ${message.sender === 'user' ? 'text-primary-100' : 'text-secondary-500'} mt-1 block`,\n              children: new Date(message.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-8 w-8 rounded-full bg-secondary-200 flex items-center justify-center text-secondary-600 ml-2\",\n            children: ((_user$profile_data3 = user.profile_data) === null || _user$profile_data3 === void 0 ? void 0 : (_user$profile_data3$n = _user$profile_data3.name) === null || _user$profile_data3$n === void 0 ? void 0 : _user$profile_data3$n.charAt(0)) || 'U'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, message.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this);\n      }), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\",\n          children: \"AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg p-4 shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",\n              style: {\n                animationDelay: '0ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",\n              style: {\n                animationDelay: '150ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-2 w-2 bg-primary-500 rounded-full animate-bounce\",\n              style: {\n                animationDelay: '300ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          disabled: isProcessing || isRecording,\n          placeholder: isRecording ? \"Recording...\" : \"Type your message...\",\n          className: \"flex-1 rounded-lg border border-secondary-300 p-3 focus:outline-none focus:ring-2 focus:ring-primary-500\",\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 p-4 border-t border-gray-200 bg-white\",\n          children: [isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleRecording,\n            className: \"p-2 text-red-500 hover:text-red-700 rounded-full bg-red-100 hover:bg-red-200 transition-colors\",\n            disabled: isProcessing,\n            title: t('chat.stopRecording'),\n            children: /*#__PURE__*/_jsxDEV(XCircleIcon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleRecording,\n            className: \"p-2 text-gray-500 hover:text-gray-700 rounded-full hover:bg-gray-100 transition-colors\",\n            disabled: isProcessing,\n            title: t('chat.startRecording'),\n            children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleVoiceSettings,\n            className: `p-2 rounded-full hover:bg-gray-100 transition-colors ${voiceSettings.enabled ? 'text-blue-500 hover:text-blue-700' : 'text-gray-500 hover:text-gray-700'}`,\n            title: voiceSettings.enabled ? t('chat.disableVoice') : t('chat.enableVoice'),\n            children: voiceSettings.enabled ? /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !inputMessage.trim() || isProcessing || isRecording,\n          className: \"p-3 rounded-lg bg-primary-500 text-white hover:bg-primary-600 transition-colors disabled:opacity-50\",\n          children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"3Z/Um+D58WClsJZOHtEZs7yVnn8=\", false, function () {\n  return [useAuth, useTranslation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","chatService","voiceService","useTranslation","PaperAirplaneIcon","MicrophoneIcon","XCircleIcon","SpeakerWaveIcon","SpeakerXMarkIcon","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputMessage","setInputMessage","isRecording","setIsRecording","isProcessing","setIsProcessing","currentConversationId","setCurrentConversationId","audioStream","setAudioStream","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","isTyping","setIsTyping","messagesEndRef","inputRef","user","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","initializeConversation","storedConversationId","localStorage","getItem","getConversationHistory","_user$profile_data","newConversationId","createConversation","id","setItem","welcomeMessage","Date","now","conversation_id","sender","text","profile_data","name","timestamp","toISOString","sentiment_score","saveMessage","error","console","endConversation","catch","err","focus","handleSubmit","e","preventDefault","trim","userMessage","prev","aiResponse","getAIResponse","aiMessage","message","length","generateSummary","voiceSettings","setVoiceSettings","enabled","preferredVoice","speed","pitch","isSpeaking","setIsSpeaking","audioQueue","setAudioQueue","t","i18n","loadVoiceSettings","settings","getUserVoiceSettings","toggleRecording","state","stop","getTracks","forEach","track","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","data","size","push","onstop","audioBlob","Blob","type","language","sttLanguage","transcribedText","speechToText","start","startNewConversation","_user$profile_data2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_user$profile_data3","_user$profile_data3$n","toLocaleTimeString","hour","minute","charAt","style","animationDelay","ref","onSubmit","value","onChange","target","disabled","placeholder","onKeyDown","key","shiftKey","title","toggleVoiceSettings","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/pages/client/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { chatService } from '../../services/chatService';\nimport { voiceService } from '../../services/voiceService';\nimport { useTranslation } from 'react-i18next';\nimport { PaperAirplaneIcon, MicrophoneIcon, XCircleIcon, SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/solid';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [audioStream, setAudioStream] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const { user } = useAuth();\n  \n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Initialize or load existing conversation\n  useEffect(() => {\n    const initializeConversation = async () => {\n      try {\n        // Check if there's a stored conversation ID\n        const storedConversationId = localStorage.getItem('currentConversationId');\n        \n        if (storedConversationId) {\n          setCurrentConversationId(storedConversationId);\n          \n          // Load messages for this conversation\n          const messages = await chatService.getConversationHistory(storedConversationId);\n          setMessages(messages);\n        } else {\n          // Create a new conversation\n          const newConversationId = await chatService.createConversation(user.id);\n          setCurrentConversationId(newConversationId);\n          localStorage.setItem('currentConversationId', newConversationId);\n          \n          // Add a welcome message\n          const welcomeMessage = {\n            id: `welcome-${Date.now()}`,\n            conversation_id: newConversationId,\n            sender: 'ai',\n            text: `Hello ${user.profile_data?.name || 'there'}! How can I help you today?`,\n            timestamp: new Date().toISOString(),\n            sentiment_score: 0.8\n          };\n          \n          await chatService.saveMessage(welcomeMessage);\n          setMessages([welcomeMessage]);\n        }\n      } catch (error) {\n        console.error('Error initializing conversation:', error);\n        // Show error in UI\n        setMessages([{\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: 'Sorry, there was an error starting the conversation. Please try refreshing the page.',\n          timestamp: new Date().toISOString(),\n        }]);\n      }\n    };\n    \n    if (user) {\n      initializeConversation();\n    }\n    \n    // Cleanup function to end conversation when component unmounts\n    return () => {\n      if (currentConversationId) {\n        chatService.endConversation(currentConversationId).catch(err => \n          console.error('Error ending conversation:', err)\n        );\n      }\n    };\n  }, [user]);\n  \n  // Focus on input when messages change\n  useEffect(() => {\n    if (!isRecording && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages, isRecording]);\n  \n  // Handle text message submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || !currentConversationId) return;\n    \n    const userMessage = {\n      conversation_id: currentConversationId,\n      sender: 'user',\n      text: inputMessage,\n      timestamp: new Date().toISOString(),\n    };\n    \n    // Update UI immediately\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n    \n    try {\n      // Save message to database\n      await chatService.saveMessage(userMessage);\n      \n      // Show typing indicator\n      setIsTyping(true);\n      \n      // Get AI response\n      const aiResponse = await chatService.getAIResponse(userMessage.text, currentConversationId, user.id);\n      \n      // Hide typing indicator\n      setIsTyping(false);\n      \n      // Create AI message\n      const aiMessage = {\n        conversation_id: currentConversationId,\n        sender: 'ai',\n        text: aiResponse.message,\n        timestamp: new Date().toISOString(),\n        sentiment_score: aiResponse.sentiment_score\n      };\n      \n      // Save AI response to database\n      await chatService.saveMessage(aiMessage);\n      \n      // Update UI\n      setMessages(prev => [...prev, aiMessage]);\n      \n      // If this is the 5th message in the conversation, generate a summary\n      if (messages.length >= 4) {\n        chatService.generateSummary(currentConversationId).catch(err => \n          console.error('Error generating summary:', err)\n        );\n      }\n    } catch (error) {\n      console.error('Error processing message:', error);\n      setIsTyping(false);\n      \n      // Show error in UI\n      setMessages(prev => [...prev, {\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        timestamp: new Date().toISOString(),\n      }]);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  // State for voice settings\n  const [voiceSettings, setVoiceSettings] = useState({\n    enabled: true,\n    preferredVoice: 'en-US-Neural2-F',\n    speed: 1.0,\n    pitch: 1.0\n  });\n  \n  // State for TTS playback\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [audioQueue, setAudioQueue] = useState([]);\n  \n  // Get translation function\n  const { t, i18n } = useTranslation();\n  \n  // Load user voice settings\n  useEffect(() => {\n    const loadVoiceSettings = async () => {\n      if (user?.id) {\n        try {\n          const settings = await voiceService.getUserVoiceSettings(user.id);\n          setVoiceSettings(settings);\n        } catch (error) {\n          console.error('Error loading voice settings:', error);\n        }\n      }\n    };\n    \n    loadVoiceSettings();\n  }, [user]);\n  \n  // Handle voice recording\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Stop recording\n      if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n        mediaRecorder.stop();\n      }\n      \n      if (audioStream) {\n        audioStream.getTracks().forEach(track => track.stop());\n        setAudioStream(null);\n      }\n      \n      setIsRecording(false);\n    } else {\n      try {\n        // Start recording\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        setAudioStream(stream);\n        \n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n        \n        const chunks = [];\n        setRecordedChunks(chunks);\n        \n        recorder.ondataavailable = (e) => {\n          if (e.data.size > 0) {\n            chunks.push(e.data);\n          }\n        };\n        \n        recorder.onstop = async () => {\n          try {\n            setIsProcessing(true);\n            \n            // Create audio blob from recorded chunks\n            const audioBlob = new Blob(chunks, { type: 'audio/webm' });\n            \n            // Get current language for STT\n            const language = i18n.language || 'en';\n            const sttLanguage = language === 'en' ? 'en-US' : language === 'es' ? 'es-ES' : 'en-US';\n            \n            // Convert speech to text using ultravox.ai\n            const transcribedText = await voiceService.speechToText(audioBlob, sttLanguage);\n            \n            if (transcribedText) {\n              setInputMessage(transcribedText);\n            }\n          } catch (error) {\n            console.error('Error processing speech to text:', error);\n            setMessages(prev => [...prev, {\n              id: `error-${Date.now()}`,\n              sender: 'system',\n              text: t('chat.speechToTextError'),\n              timestamp: new Date().toISOString(),\n            }]);\n          } finally {\n            setIsProcessing(false);\n          }\n        };\n        \n        recorder.start();\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n        // Show error in UI\n        setMessages(prev => [...prev, {\n          id: `error-${Date.now()}`,\n          sender: 'system',\n          text: t('chat.microphoneError'),\n          timestamp: new Date().toISOString(),\n        }]);\n      }\n    }\n  };\n  \n  // Start a new conversation\n  const startNewConversation = async () => {\n    try {\n      // End current conversation if exists\n      if (currentConversationId) {\n        await chatService.endConversation(currentConversationId);\n      }\n      \n      // Create a new conversation\n      const newConversationId = await chatService.createConversation(user.id);\n      setCurrentConversationId(newConversationId);\n      localStorage.setItem('currentConversationId', newConversationId);\n      \n      // Add a welcome message\n      const welcomeMessage = {\n        id: `welcome-${Date.now()}`,\n        conversation_id: newConversationId,\n        sender: 'ai',\n        text: `Hello ${user.profile_data?.name || 'there'}! How can I help you today?`,\n        timestamp: new Date().toISOString(),\n        sentiment_score: 0.8\n      };\n      \n      await chatService.saveMessage(welcomeMessage);\n      setMessages([welcomeMessage]);\n    } catch (error) {\n      console.error('Error starting new conversation:', error);\n      // Show error in UI\n      setMessages([{\n        id: `error-${Date.now()}`,\n        sender: 'system',\n        text: 'Sorry, there was an error starting a new conversation. Please try refreshing the page.',\n        timestamp: new Date().toISOString(),\n      }]);\n    }\n  };\n  \n  return (\n    <div className=\"flex flex-col h-[calc(100vh-12rem)]\">\n      {/* Header */}\n      <div className=\"bg-white border-b p-4 flex justify-between items-center\">\n        <h2 className=\"text-lg font-semibold text-secondary-900\">AI Therapy Session</h2>\n        <button\n          onClick={startNewConversation}\n          className=\"text-sm px-3 py-1 bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200 transition-colors\"\n        >\n          New Conversation\n        </button>\n      </div>\n      \n      {/* Messages area */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\">\n        {messages.map((message, index) => (\n          <div\n            key={message.id || index}\n            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            {message.sender !== 'user' && message.sender !== 'system' && (\n              <div className=\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\">\n                AI\n              </div>\n            )}\n            <div\n              className={`max-w-[70%] rounded-lg p-3 shadow-sm ${\n                message.sender === 'user'\n                  ? 'bg-primary-500 text-white'\n                  : message.sender === 'system'\n                  ? 'bg-red-100 text-red-900'\n                  : 'bg-white text-secondary-900'\n              }`}\n            >\n              <p className=\"text-sm whitespace-pre-wrap\">{message.text}</p>\n              <span className={`text-xs ${message.sender === 'user' ? 'text-primary-100' : 'text-secondary-500'} mt-1 block`}>\n                {new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </span>\n            </div>\n            {message.sender === 'user' && (\n              <div className=\"h-8 w-8 rounded-full bg-secondary-200 flex items-center justify-center text-secondary-600 ml-2\">\n                {user.profile_data?.name?.charAt(0) || 'U'}\n              </div>\n            )}\n          </div>\n        ))}\n        \n        {/* Typing indicator */}\n        {isTyping && (\n          <div className=\"flex justify-start\">\n            <div className=\"h-8 w-8 rounded-full bg-primary-500 flex items-center justify-center text-white mr-2\">\n              AI\n            </div>\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex space-x-1\">\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '150ms' }}></div>\n                <div className=\"h-2 w-2 bg-primary-500 rounded-full animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Input area */}\n      <div className=\"border-t p-4 bg-white\">\n        <form onSubmit={handleSubmit} className=\"flex space-x-2\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            disabled={isProcessing || isRecording}\n            placeholder={isRecording ? \"Recording...\" : \"Type your message...\"}\n            className=\"flex-1 rounded-lg border border-secondary-300 p-3 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n          />\n          <div className=\"flex items-center space-x-2 p-4 border-t border-gray-200 bg-white\">\n            {/* Voice recording button */}\n            {isRecording ? (\n              <button\n                onClick={toggleRecording}\n                className=\"p-2 text-red-500 hover:text-red-700 rounded-full bg-red-100 hover:bg-red-200 transition-colors\"\n                disabled={isProcessing}\n                title={t('chat.stopRecording')}\n              >\n                <XCircleIcon className=\"h-6 w-6\" />\n              </button>\n            ) : (\n              <button\n                onClick={toggleRecording}\n                className=\"p-2 text-gray-500 hover:text-gray-700 rounded-full hover:bg-gray-100 transition-colors\"\n                disabled={isProcessing}\n                title={t('chat.startRecording')}\n              >\n                <MicrophoneIcon className=\"h-6 w-6\" />\n              </button>\n            )}\n            \n            {/* TTS toggle button */}\n            <button\n              onClick={toggleVoiceSettings}\n              className={`p-2 rounded-full hover:bg-gray-100 transition-colors ${voiceSettings.enabled ? 'text-blue-500 hover:text-blue-700' : 'text-gray-500 hover:text-gray-700'}`}\n              title={voiceSettings.enabled ? t('chat.disableVoice') : t('chat.enableVoice')}\n            >\n              {voiceSettings.enabled ? (\n                <SpeakerWaveIcon className=\"h-6 w-6\" />\n              ) : (\n                <SpeakerXMarkIcon className=\"h-6 w-6\" />\n              )}\n            </button>\n          </div>\n          <button\n            type=\"submit\"\n            disabled={!inputMessage.trim() || isProcessing || isRecording}\n            className=\"p-3 rounded-lg bg-primary-500 text-white hover:bg-primary-600 transition-colors disabled:opacity-50\"\n          >\n            <PaperAirplaneIcon className=\"h-6 w-6\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}