{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  role\n}) => {\n  // DEVELOPMENT MODE: Bypass authentication completely\n  // Create a mock user based on the requested route role\n  const mockUser = {\n    id: `${role || 'user'}-1`,\n    email: `${role || 'user'}@example.com`,\n    role: role || 'client',\n    name: role ? `${role.charAt(0).toUpperCase() + role.slice(1)} User` : 'Test User',\n    profile_data: {\n      name: role ? `${role.charAt(0).toUpperCase() + role.slice(1)} User` : 'Test User'\n    }\n  };\n\n  // Store the mock user in localStorage for persistence\n  if (!localStorage.getItem('smarttherapist_mock_user')) {\n    localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n    console.log('Development mode: Created mock user', mockUser);\n  }\n\n  // Always render the child routes in development mode\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","role","mockUser","id","email","name","charAt","toUpperCase","slice","profile_data","localStorage","getItem","setItem","JSON","stringify","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nconst ProtectedRoute = ({ role }) => {\n  // DEVELOPMENT MODE: Bypass authentication completely\n  // Create a mock user based on the requested route role\n  const mockUser = {\n    id: `${role || 'user'}-1`,\n    email: `${role || 'user'}@example.com`,\n    role: role || 'client',\n    name: role ? `${role.charAt(0).toUpperCase() + role.slice(1)} User` : 'Test User',\n    profile_data: {\n      name: role ? `${role.charAt(0).toUpperCase() + role.slice(1)} User` : 'Test User'\n    }\n  };\n  \n  // Store the mock user in localStorage for persistence\n  if (!localStorage.getItem('smarttherapist_mock_user')) {\n    localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n    console.log('Development mode: Created mock user', mockUser);\n  }\n  \n  // Always render the child routes in development mode\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnC;EACA;EACA,MAAMC,QAAQ,GAAG;IACfC,EAAE,EAAE,GAAGF,IAAI,IAAI,MAAM,IAAI;IACzBG,KAAK,EAAE,GAAGH,IAAI,IAAI,MAAM,cAAc;IACtCA,IAAI,EAAEA,IAAI,IAAI,QAAQ;IACtBI,IAAI,EAAEJ,IAAI,GAAG,GAAGA,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG,WAAW;IACjFC,YAAY,EAAE;MACZJ,IAAI,EAAEJ,IAAI,GAAG,GAAGA,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,OAAO,GAAG;IACxE;EACF,CAAC;;EAED;EACA,IAAI,CAACE,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;IACrDD,YAAY,CAACE,OAAO,CAAC,0BAA0B,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ,CAAC,CAAC;IAC1Ea,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEd,QAAQ,CAAC;EAC9D;;EAEA;EACA,oBAAOH,OAAA,CAACH,MAAM;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GArBIrB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}