{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * useLanguage Hook\n * \n * Custom hook for accessing the language context and i18n functionality\n * throughout the application.\n */\n\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageContext from '../context/LanguageContext';\nconst useLanguage = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const languageContext = useContext(LanguageContext);\n  if (!languageContext) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  const {\n    currentLanguage,\n    availableLanguages,\n    changeLanguage,\n    addLanguage\n  } = languageContext;\n  return {\n    t,\n    // Translation function\n    currentLanguage,\n    // Current language code (e.g., 'en', 'es')\n    availableLanguages,\n    // Array of available languages\n    changeLanguage,\n    // Function to change the current language\n    addLanguage // Function to add a new language\n  };\n};\n_s(useLanguage, \"w4fn1p7+5CcdgK9dBd3ZC1/M+vQ=\", false, function () {\n  return [useTranslation];\n});\nexport default useLanguage;","map":{"version":3,"names":["useContext","useTranslation","LanguageContext","useLanguage","_s","t","languageContext","Error","currentLanguage","availableLanguages","changeLanguage","addLanguage"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/hooks/useLanguage.js"],"sourcesContent":["/**\n * useLanguage Hook\n * \n * Custom hook for accessing the language context and i18n functionality\n * throughout the application.\n */\n\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageContext from '../context/LanguageContext';\n\nconst useLanguage = () => {\n  const { t } = useTranslation();\n  const languageContext = useContext(LanguageContext);\n  \n  if (!languageContext) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  \n  const { \n    currentLanguage, \n    availableLanguages, \n    changeLanguage, \n    addLanguage \n  } = languageContext;\n  \n  return {\n    t,                  // Translation function\n    currentLanguage,    // Current language code (e.g., 'en', 'es')\n    availableLanguages, // Array of available languages\n    changeLanguage,     // Function to change the current language\n    addLanguage         // Function to add a new language\n  };\n};\n\nexport default useLanguage;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,eAAe,MAAM,4BAA4B;AAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAE,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAC9B,MAAMK,eAAe,GAAGN,UAAU,CAACE,eAAe,CAAC;EAEnD,IAAI,CAACI,eAAe,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EAEA,MAAM;IACJC,eAAe;IACfC,kBAAkB;IAClBC,cAAc;IACdC;EACF,CAAC,GAAGL,eAAe;EAEnB,OAAO;IACLD,CAAC;IAAmB;IACpBG,eAAe;IAAK;IACpBC,kBAAkB;IAAE;IACpBC,cAAc;IAAM;IACpBC,WAAW,CAAS;EACtB,CAAC;AACH,CAAC;AAACP,EAAA,CAtBID,WAAW;EAAA,QACDF,cAAc;AAAA;AAuB9B,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}