{"ast":null,"code":"var _jsxFileName = \"/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = userType => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n      const user = mockUsers[userType];\n\n      // Create mock user data with all necessary fields\n      const mockUser = {\n        id: `${userType}-1`,\n        email: user.email,\n        role: user.role,\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n        profile_data: {\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n        }\n      };\n\n      // Create a mock Supabase session structure\n      const mockSession = {\n        provider_token: null,\n        provider_refresh_token: null,\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        expires_in: 3600,\n        expires_at: Math.floor(Date.now() / 1000) + 3600,\n        token_type: 'bearer',\n        user: mockUser\n      };\n\n      // Store in localStorage with the Supabase project ID in the correct format\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify({\n        currentSession: mockSession,\n        expiresAt: mockSession.expires_at\n      }));\n\n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      console.log(`âœ… Mock login successful as ${userType}`);\n\n      // Navigate to the appropriate dashboard\n      setTimeout(() => {\n        switch (userType) {\n          case 'client':\n            window.location.href = '/client/dashboard';\n            break;\n          case 'therapist':\n            window.location.href = '/therapist/dashboard';\n            break;\n          case 'admin':\n            window.location.href = '/admin/dashboard';\n            break;\n          default:\n            window.location.reload();\n        }\n      }, 500);\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-3 text-gray-800\",\n      children: \"Development Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('client'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Client'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('therapist'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Therapist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin('admin'),\n        disabled: loading,\n        className: \"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\",\n        children: loading ? 'Logging in...' : 'Login as Admin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: You may need to create these users in Supabase first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", mockUsers.client.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", mockUsers.client.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(DevLogin, \"morcnhKrFckrV3McLd/531yOsR0=\", false, function () {\n  return [useNavigate];\n});\n_c = DevLogin;\nexport default DevLogin;\nvar _c;\n$RefreshReg$(_c, \"DevLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DevLogin","_s","navigate","loading","setLoading","error","setError","mockUsers","client","email","password","role","therapist","admin","handleLogin","userType","Error","user","mockUser","id","name","charAt","toUpperCase","slice","profile_data","mockSession","provider_token","provider_refresh_token","access_token","Math","random","toString","substring","refresh_token","expires_in","expires_at","floor","Date","now","token_type","localStorage","setItem","JSON","stringify","currentSession","expiresAt","console","log","setTimeout","window","location","href","reload","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/gio/development/smartterapist/CascadeProjects/windsurf-project/client/src/components/DevLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Development-only login component that provides quick login buttons\n * for the mock user accounts\n */\nconst DevLogin = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Mock user credentials\n  const mockUsers = {\n    client: {\n      email: 'client@example.com',\n      password: 'password123',\n      role: 'client'\n    },\n    therapist: {\n      email: 'therapist@example.com',\n      password: 'password123',\n      role: 'therapist'\n    },\n    admin: {\n      email: 'admin@example.com',\n      password: 'password123',\n      role: 'admin'\n    }\n  };\n\n  // Mock login function that bypasses authentication for development purposes\n  const handleLogin = (userType) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      if (!mockUsers[userType]) {\n        throw new Error(`Invalid user type: ${userType}`);\n      }\n\n      const user = mockUsers[userType];\n      \n      // Create mock user data with all necessary fields\n      const mockUser = {\n        id: `${userType}-1`,\n        email: user.email,\n        role: user.role,\n        name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`,\n        profile_data: {\n          name: user.name || `${userType.charAt(0).toUpperCase() + userType.slice(1)} User`\n        }\n      };\n      \n      // Create a mock Supabase session structure\n      const mockSession = {\n        provider_token: null,\n        provider_refresh_token: null,\n        access_token: 'mock-token-' + Math.random().toString(36).substring(2),\n        refresh_token: 'mock-refresh-' + Math.random().toString(36).substring(2),\n        expires_in: 3600,\n        expires_at: Math.floor(Date.now() / 1000) + 3600,\n        token_type: 'bearer',\n        user: mockUser\n      };\n      \n      // Store in localStorage with the Supabase project ID in the correct format\n      localStorage.setItem('sb-nvrvldvrqxlhcebxqowk-auth-token', JSON.stringify({\n        currentSession: mockSession,\n        expiresAt: mockSession.expires_at\n      }));\n      \n      // Also store in our custom key for backup\n      localStorage.setItem('smarttherapist_mock_user', JSON.stringify(mockUser));\n      \n      console.log(`âœ… Mock login successful as ${userType}`);\n      \n      // Navigate to the appropriate dashboard\n      setTimeout(() => {\n        switch (userType) {\n          case 'client':\n            window.location.href = '/client/dashboard';\n            break;\n          case 'therapist':\n            window.location.href = '/therapist/dashboard';\n            break;\n          case 'admin':\n            window.location.href = '/admin/dashboard';\n            break;\n          default:\n            window.location.reload();\n        }\n      }, 500);\n    } catch (error) {\n      console.error(`Error with mock login as ${userType}:`, error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg border border-gray-200 z-50\">\n      <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">Development Login</h3>\n      \n      {error && (\n        <div className=\"mb-3 p-2 bg-red-100 text-red-800 text-xs rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"space-y-2\">\n        <button\n          onClick={() => handleLogin('client')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Client'}\n        </button>\n        <button\n          onClick={() => handleLogin('therapist')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Therapist'}\n        </button>\n        <button\n          onClick={() => handleLogin('admin')}\n          disabled={loading}\n          className=\"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors disabled:opacity-50\"\n        >\n          {loading ? 'Logging in...' : 'Login as Admin'}\n        </button>\n      </div>\n      \n      <div className=\"mt-3 text-xs text-gray-500\">\n        <p>Note: You may need to create these users in Supabase first.</p>\n        <p>Email: {mockUsers.client.email}</p>\n        <p>Password: {mockUsers.client.password}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DevLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}